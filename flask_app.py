import json
import random

import logging_
from flask import Flask, request

from typing_ import AliceUserRequest, TrainingStep
from typing_.response import RespDataClass, Response, \
    ResponseField, Card, CardType, Item, Button
from fsm import FSMContext
from dialogs import warm_up_algorithm, warm_down_algorithm, motivations, tracks_sixteen, tracks_fourteen

from tools import any_from

from handlers import dream, water, weight
import handlers.sport.cardio

from states import MainGroup

from logging_ import logged, logger

app = Flask(__name__)

fsm = FSMContext()

NOW_SYNONIMS = [
    '–°–µ–π—á–∞—Å',
    '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç',
    '–ü—Ä—è–º–æ —Å–µ–π—á–∞—Å',
    '–ù–∞ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç',
    '–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç',
    '–†–æ–≤–Ω–æ —Å–µ–π—á–∞—Å'
]


def trans_to_dict(dict_: dict | RespDataClass) -> dict:
    if hasattr(dict_, 'to_dict'):
        dict_ = dict_.to_dict()
    else:
        for key, value in dict_.items():
            if hasattr(value, 'to_dict'):
                value = value.to_dict()
            dict_[key] = value
    return dict_


def dict_to_json(dict_: dict | Response, *args, **kwargs):
    return json.dumps(trans_to_dict(dict_), *args, **kwargs)


# –®–∞–±–ª–æ–Ω –¥–ª—è —É—Å–ª–æ–≤–∏–π:  if state == MyStates.state_1
# –î–∏–∞–≥—Ä–∞–º–º–∞: https://miro.com/app/board/uXjVMdrXZW0=/


def is_positive(command: str) -> bool:
    return any_from('–≥–æ—Ç–æ–≤', '–ø–æ–≥–Ω', '–ø–æ–µ—Ö–∞–ª–∏', '–¥–∞–≤–∞–π', '–¥–∞', '–≤—ã–ø–æ–ª–Ω', '–∑–∞–ø—É—Å', in_=command)


def start_power_training(context: FSMContext, resp: dict | Response) -> dict | Response:
    resp.update({
        'response': {
            'text': '–î–∞–≤–∞–π—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∏–º –∫ —Å–∏–ª–æ–≤–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ. –î–ª—è –Ω–µ–µ –í–∞–º –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –±–æ–µ–≤–æ–π –Ω–∞—Å—Ç—Ä–æ–π. –û–¥–Ω–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ '
                    '–¥–ª–∏—Ç—Å—è 40 —Å–µ–∫—É–Ω–¥.'
                    '–ü–µ—Ä–µ–¥  –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –í—ã –º–æ–∂–µ—Ç–µ –∏–∑—É—á–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ, –Ω–∞—á–∞—Ç—å –¥–µ–ª–∞—Ç—å –µ–≥–æ –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å '
                    '–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É.'
                    '–í—ã –≥–æ—Ç–æ–≤—ã –∫ —Å–∏–ª–æ–≤–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ –∏–ª–∏ –ø–æ–¥–±–µ—Ä—ë–º –í–∞–º —á—Ç–æ-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–µ?'
                    '–í—ã –≥–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å, –∏–ª–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –¥—Ä—É–≥—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É?',
            'card': {
                'type': 'ItemsList',
                'header': {
                    'text': '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –ï—Å–ª–∏ –Ω–∞ —ç—Ç–æ—Ç —ç—Ç–∞–ø –º—ã –ø–µ—Ä–µ—à–ª–∏ —Å —Ä–∞–∑–º–∏–Ω–∫–∏, —Ç–æ –æ–± —ç—Ç–æ–º –±—É–¥–µ—Ç –Ω–∞–ø–∏—Å–∞–Ω–æ'
                            '–ü—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é —Å–∏–ª–æ–≤–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏.'
                },
                'items': [
                    {"title": '–Ø –≥–æ—Ç–æ–≤', "button": {"text": '–Ø –≥–æ—Ç–æ–≤'},
                     "image_id": '997614/72ab6692a3db3f4e3056'},
                    {"title": '–í—ã–±–µ—Ä–µ–º –¥—Ä—É–≥—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É',
                     "button": {"text": '–í—ã–±–µ—Ä–µ–º –¥—Ä—É–≥—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É'},
                     "image_id": '1030494/cc3631c8499cdc8daf8b'}
                ]
            }
        }
    })
    context.set_state(MainGroup.Sport.Power.start)
    return resp


def start_warmup(context: FSMContext, resp: dict | Response) -> dict | Response:
    resp.update({
        'response': {
            'text': '–í–æ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –í—ã –º–æ–∂–µ—Ç–µ –∏–∑—É—á–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ, –Ω–∞—á–∞—Ç—å –≤—ã–ø–æ–ª–Ω—è—Ç—å –µ–≥–æ –∏–ª–∏ '
                    '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É.\n'
                    '–í—ã –≥–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –∏–ª–∏ –≤—ã–±–µ—Ä–µ–º –¥—Ä—É–≥—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É?',
            'card': {
                'type': 'ItemsList',
                'header': {
                    'text': '–ü—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é —Ä–∞–∑–º–∏–Ω–∫–∏'
                },
                'items': [
                    {"title": '–Ø –≥–æ—Ç–æ–≤', "button": {"text": '–Ø –≥–æ—Ç–æ–≤'},
                     "image_id": '997614/72ab6692a3db3f4e3056'},
                    {"title": '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å',
                     "button": {"text": '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'},
                     "image_id": '1030494/cc3631c8499cdc8daf8b'}
                ]
            }
        }
    })
    context.set_state(MainGroup.Sport.Wrap.WarmUp.start)
    return resp


def end_warmup(context: FSMContext,
               resp: dict | Response) -> dict | Response:  # –í–æ–∑–≤—Ä–∞—Ç –∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—é –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª–æ –¥–æ –Ω–∞—á–∞–ª–∞ —Ä–∞–∑–º–∏–Ω–∫–∏
    resp.update({
        'response': {
            'text': '–í—ã —Ö–æ—Ä–æ—à–æ –ø–æ—Ç—Ä—É–¥–∏–ª–∏—Å—å, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é –≤–∞—Å —Å –ø–æ–±–µ–¥–æ–π! –ß—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å—à–µ: —Å–∫–∞–∂–∏—Ç–µ "–ø–æ–≤—Ç–æ—Ä–∏—Ç—å '
                    '—Ä–∞–∑–º–∏–Ω–∫—É", —á—Ç–æ–±—ã –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –µ—â—ë —Ä–∞–∑ –∏–ª–∏ "–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ", —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É?',
            'card': {
                'type': 'ItemsList',
                'header': {
                    'text': '–ü–æ–≤—Ç–æ—Ä–∏–º —Ä–∞–∑–º–∏–Ω–∫—É –∏–ª–∏ –ø–µ—Ä–µ–π–¥—ë–º –∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ?'
                },
                'items': [
                    {"title": '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ä–∞–∑–º–∏–Ω–∫—É', "button": {"text": '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ä–∞–∑–º–∏–Ω–∫—É'},
                     "image_id": '997614/15f977696a281092bcc0'},
                    {"title": '–ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ',
                     "button": {"text": '–ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ'},
                     "image_id": '1030494/cc3631c8499cdc8daf8b'}
                ]
            }

        }
    })

    context.update_data(step=0)
    context.set_state(MainGroup.Sport.Wrap.WarmUp.end)

    return resp


def cancel_warmup(context: FSMContext, resp: dict | Response, data: dict | None = None) -> dict | Response:
    if data is None:
        data = context.get_data()

    return data['callback'](context, resp)


def start_session(context: FSMContext, resp: dict | Response, add_help_button: bool = True) -> dict | Response:
    # –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏
    answer_options = ['–ü—Ä–∏–≤–µ—Çüñê!  –í—Å–µ–≥–¥–∞ —Ö–æ—Ç–µ–ª–∏ –æ–∫—É–Ω—É—Ç—å—Å—è –≤ –º–∏—Ä –∑–¥–æ—Ä–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏? '
                      '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –í—ã —Å–¥–µ–ª–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä.'
                      '–Ø - –Ω–∞–≤—ã–∫ "–¢–æ—á–∫–∞ —Å—Ç–∞—Ä—Ç–∞" –ø–æ–º–æ–≥—É –æ—Å–≤–æ–∏—Ç—å –æ—Å–Ω–æ–≤—ã –ó–û–ñ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ —Å –ª—ë–≥–∫–æ—Å—Ç—å—é –∏ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º.'
                      '–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–æ–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º, —Ç–æ —Å–∫–∞–∂–∏—Ç–µ "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?". '
                      '–ï—Å–ª–∏ –∂–µ –≥–æ—Ç–æ–≤—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å, —Ç–æ —Å–∫–∞–∂–∏—Ç–µ "–ü–æ–µ—Ö–∞–ª–∏".',

                      '–û—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ –æ—Å–æ–∑–Ω–∞–≤–∞—Ç—å, —á—Ç–æ –í—ã —Ä–µ—à–∏–ª–∏ –∑–∞–±–æ—Ç–∏—Ç—Å—è –æ —Å–µ–±–µ –∏ —Å–≤–æ—ë–º –∑–¥–æ—Ä–æ–≤—å–µüíñ!'
                      ' –Ø –ø–æ–∑–∞–±–æ—á—É—Å—å –æ –í–∞—Å –∏ –æ–±–ª–µ–≥—á—É –≤–∞—à–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –ó–û–ñ. –í—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å–ª–µ–¥–∏—Ç—å '
                      '–∑–∞ –í–∞—à–∏–º –∑–¥–æ—Ä–æ–≤—å–µ–º —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º.'
                      ' –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –Ω–∞–≤—ã–∫–∞, —Ç–æ —Å–∫–∞–∂–∏—Ç–µ "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?". '
                      '–ï—Å–ª–∏ —É–∂–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å, —Ç–æ —Å–∫–∞–∂–∏—Ç–µ "–ü–æ–µ—Ö–∞–ª–∏".']
    resp.response = ResponseField(
        text=f'{random.choice(answer_options)}',
        buttons=[
            Button(title='–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?'),
            Button(title="–ü–æ–µ—Ö–∞–ª–∏!")
        ]
    )
    if add_help_button:
        resp.response.buttons.append(Button(title='–ü–æ–º–æ—â—å', hide=False))
    context.reset_state(with_data=True)
    return resp


def start_warmdown(context: FSMContext, resp: dict | Response) -> dict | Response:
    resp.response = ResponseField(
        text='–í–æ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –í—ã –º–æ–∂–µ—Ç–µ –∏–∑—É—á–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ, '
             '–Ω–∞—á–∞—Ç—å –≤—ã–ø–æ–ª–Ω—è—Ç—å –µ–≥–æ –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É.\n'
             '–í—ã –≥–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –∏–ª–∏ –≤—ã–±–µ—Ä–µ–º –¥—Ä—É–≥—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É?',
        card=Card(
            type=CardType.ItemsList,
            header='–ü—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –∑–∞–º–∏–Ω–∫–∏',
            items=[
                Item(title='–Ø –≥–æ—Ç–æ–≤', button='–Ø –≥–æ—Ç–æ–≤', image_id='997614/72ab6692a3db3f4e3056'),
                Item(title='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', button='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', image_id='1030494/cc3631c8499cdc8daf8b')
            ]
        )
    )
    context.set_state(MainGroup.Sport.Wrap.WarmDown.start)
    return resp


def end_warmdown(context: FSMContext,
                 resp: dict | Response) -> dict | Response:  # –í–æ–∑–≤—Ä–∞—Ç –∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—é –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª–æ –¥–æ –Ω–∞—á–∞–ª–∞ —Ä–∞–∑–º–∏–Ω–∫–∏
    resp.response = ResponseField(
        text='–í—ã —Ö–æ—Ä–æ—à–æ –ø–æ—Ç—Ä—É–¥–∏–ª–∏—Å—å, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é –≤–∞—Å —Å  –æ—á–µ—Ä–µ–¥–Ω–æ–π –ø–æ–±–µ–¥–æ–π! –ß—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å—à–µ: '
             '—Å–∫–∞–∂–∏—Ç–µ "–ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–º–∏–Ω–∫—É" –∏–ª–∏ "–∑–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–º–∏–Ω–∫—É"?',
        card=Card(
            type=CardType.ItemsList,
            header='–ü–æ–≤—Ç–æ—Ä–∏–º –∑–∞–∑–º–∏–Ω–∫—É –∏–ª–∏ –ø–µ—Ä–µ–π–¥—ë–º –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Å–ø–∏—Å–∫—É?', items=[
                Item(title='–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ä–∞–∑–º–∏–Ω–∫—É', button='–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ä–∞–∑–º–∏–Ω–∫—É', image_id='997614/15f977696a281092bcc0'),
                Item(title='–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Å–ø–∏—Å–∫—É', button='–ù–∞–∑–∞–¥', image_id='1030494/cc3631c8499cdc8daf8b')
            ]
        )
    )

    context.update_data(step=0)
    context.set_state(MainGroup.Sport.Wrap.WarmDown.end)

    return resp


def cancel_warmdown(context: FSMContext, resp: dict | Response, data: dict | None = None) -> dict | Response:
    if data is None:
        data = context.get_data()

    return data['callback'](context, resp)


def finish_power_training(context: FSMContext, resp: dict | Response) -> dict | Response:
    resp.update(
        dict(
            response=dict(
                text='–í—ã —Ö–æ—Ä–æ—à–æ –ø–æ—Ç—Ä—É–¥–∏–ª–∏—Å—å, –≥–æ—Ä–∂—É—Å—å –í–∞–º–∏. –ü–æ–≤—Ç–æ—Ä–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –∏–ª–∏ –≤–µ—Ä–Ω—ë–º—Å—è –≤ –º–µ–Ω—é? –í—ã–±–æ—Ä –∑–∞ –í–∞–º–∏.',
                card=dict(
                    type='ItemsList',
                    header={'text': '–ü–æ–≤—Ç–æ—Ä–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –∏–ª–∏ –≤–µ—Ä–Ω—ë–º—Å—è –≤ –º–µ–Ω—é?'},
                    items=[
                        dict(title='–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É', button={"text": '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É'},
                             image_id='997614/15f977696a281092bcc0'),
                        dict(title='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', button=dict(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'),
                             image_id='1030494/cc3631c8499cdc8daf8b')
                    ]
                )
            )
        )
    )
    context.set_state(MainGroup.Sport.Power.final)
    return resp


def show_main_menu(context: FSMContext, resp: dict | Response, text: str | None = None,
                   card_text: str | None = None) -> dict | Response:
    resp.response = ResponseField(
        text='–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∏–∫—Ç–æ –Ω–µ —É–≤–∏–¥–∏—Ç :(',
        tts=text or f'–í—ã —É–∂–µ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —à–∞–≥–∞—Ö –æ—Ç –∑–¥–æ—Ä–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏! –ß–µ–º —Å–µ–≥–æ–¥–Ω—è –∑–∞–π–º—ë–º—Å—è? –í—ã–±–∏—Ä–∞–π—Ç–µ: '
                    f'"–ö–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", "–°–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", "–£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞", "–í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å", "–ò–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å", '
                    f'–∏–ª–∏ "–§–∞–∑—ã —Å–Ω–∞".',
        card=Card(
            type=CardType.ItemsList,
            header=card_text or ['–ß–µ–º —Ö–æ—Ç–∏—Ç–µ –∑–∞–Ω—è—Ç—å—Å—è? –í—ã–±–∏—Ä–∞–π—Ç–µ: \n'
                                 '"–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏", '
                                 '"–§–∞–∑—ã —Å–Ω–∞", '
                                 '"–í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å" –∏–ª–∏ '
                                 '"–ò–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å"',

                                 '–ü—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ —Ä–∞–±–æ—Ç–µ. –í—ã–±–∏—Ä–∞–π—Ç–µ —á–µ–º –∑–∞–π–º—ë–º—Å—è: \n'
                                 '"–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏", '
                                 '"–§–∞–∑—ã —Å–Ω–∞", '
                                 '"–í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å" –∏–ª–∏ '
                                 '"–ò–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å"',

                                 '–ß–µ–º –∑–∞–π–º—ë–º—Å—è –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑? –í—ã–±–∏—Ä–∞–π—Ç–µ: \n'
                                 '"–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏", '
                                 '"–§–∞–∑—ã —Å–Ω–∞", '
                                 '"–í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å" –∏–ª–∏ '
                                 '"–ò–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å"'
                                 ],
            items=[
                Item(
                    title='—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
                    button='—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
                    description='–æ–ø–∏—Å–∞–Ω–∏–µ...',
                    image_id='965417/164c019491e4f4839bfa'
                ),
                Item(
                    title='–≤–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å',
                    button='–≤–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å',
                    description='–æ–ø–∏—Å–∞–Ω–∏–µ...',
                    image_id='1540737/dc7c3c075dd3ecc22fc7'
                ),
                Item(
                    title='—Ñ–∞–∑—ã —Å–Ω–∞',
                    button='—Ñ–∞–∑—ã —Å–Ω–∞',
                    description='–æ–ø–∏—Å–∞–Ω–∏–µ...',
                    image_id='213044/e81c096eeedd03ef9a2e'
                ),
                Item(
                    title='–∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å',
                    button='–∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å',
                    description='–æ–ø–∏—Å–∞–Ω–∏–µ..',
                    image_id='1540737/223b47fade7f44cbedfb'
                )
            ]
        )
    )
    MainGroup.Sport.state_home.set(context)
    return resp


@app.route('/alice', methods=['POST'])
@logged
def _main():
    req = AliceUserRequest(request.data.decode())

    command = req.request.command
    user_id = req.session.user.user_id

    context = fsm.build_context(user_id)

    state = context.get_state()

    resp = Response(version=req.version, session=req.session)

    logger.debug(f'{command=}')
    logger.debug(f'{state=}')
    logger.debug(f'{req=}')

    if req.session.new:
        resp = start_session(context, resp)
        return dict_to_json(resp, ensure_ascii=False, indent=2)

    if any_from(('–ø–æ–º–æ', 'help'), in_=command):

        #                     buttons=context.get_data(user_id).get('buttons', None)))
        # resp = start_session(user_id, resp, add_help_button=False)
        resp.response = ResponseField(
            text=state.help_message.format(
                now=random.choice(NOW_SYNONIMS)) if state is not None else MainGroup.help_message.format(
                now=random.choice(NOW_SYNONIMS)),
            buttons=context.data.get('last_buttons', [])
        )
        # '–ù–µ –±–µ—Å–ø–æ–∫–æ–π—Ç–µ—Å—å —è –ø–æ–¥—Å–∫–∞–∂—É –í–∞–º, —á—Ç–æ –¥–µ–ª–∞—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –≥–¥–µ –í—ã —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å. –ï—Å–ª–∏ –í—ã —Å–µ–π—á–∞—Å
        # ...\n' '–ù–∞ —ç—Ç–∞–ø–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, —Ç–æ –í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã: "–Ø –≥–æ—Ç–æ–≤" (—á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –≤—ã–±–æ—Ä—É
        # —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏–ª–∏ —Ä–∞—Å—á—ë—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)' ' –∏ "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?" (–¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –º–æ–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞);\n' '–£–∑–Ω–∞–≤–∞–ª–∏
        # –í–∞—à–µ –¥–Ω–µ–≤–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –≤–æ–¥—ã, –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–ª–∏ —Ñ–∞–∑—ã —Å–Ω–∞ –∏–ª–∏ –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å, ' '—Ç–æ –¥–∞–ª–µ–µ –í—ã –º–æ–∂–µ—Ç–µ "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫
        # –æ—Å–Ω–æ–≤–Ω–æ–º—É —Å–ø–∏—Å–∫—É", —Ç–æ –µ—Å—Ç—å –≤ –º–µ–Ω—é, –∏–ª–∏ "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –µ—â—ë —Ä–∞–∑" –∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–µ–º –∂–µ –Ω–∞–≤—ã–∫–æ–º
        # –ø–æ–≤—Ç–æ—Ä–Ω–æ.–Ω–∞—á–∏–Ω–∞–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ, —Ç–æ –ø–µ—Ä–µ–π—Ç–∏ –∫' ' –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –í—ã –º–æ–∂–µ—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π "–ü–æ–µ—Ö–∞–ª–∏". –¢–∞–∫–∂–µ
        # –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ –∫ –≤—ã–±–æ—Ä—É –∫–æ–º–∞–Ω–¥–æ–π "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Å–ø–∏—Å–∫—É";\n' '–í—ã–ø–æ–ª–Ω—è–µ—Ç–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏
        # —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, —Ä–∞–∑–º–∏–Ω–∫–∏ –∏–ª–∏ –∑–∞–º–∏–Ω–∫–∏, —Ç–æ –í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –∫–æ–º–∞–Ω–¥—ã: "–ü–æ–¥—Ä–æ–±–Ω–µ–µ" (—á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É
        # –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è), "–í—ã–ø–æ–ª–Ω–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ" ' '(—á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è) –∏ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ" (—á—Ç–æ–±—ã
        # –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—é –≤ —Ç–µ–∫—É—â–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ);\n' '–ó–∞–∫–æ–Ω—á–∏–ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É, —Ç–æ –º–æ–∂–Ω–æ "–ü–æ–≤—Ç–æ—Ä–∏—Ç—å
        # —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É" –∏–ª–∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É";\n–í—ã–±–∏—Ä–∞–µ—Ç–µ —Ç–∏–ø –∫–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, —Ç–æ —É –í–∞—Å –µ—Å—Ç—å –≤—ã–±–æ—Ä –º–µ–∂–¥—É
        # –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π ' '(–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π "–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è") –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–æ–π —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—ë–º –≤ –≤–∏–¥–µ
        # —Å–∫–∞–∫–∞–ª–∫–∏ (–∫–æ–º–∞–Ω–¥–∞ - "–°–æ —Å–∫–∞–∫–∞–ª–∫–æ–π");\n' '–í—ã–±–∏—Ä–∞–µ—Ç–µ —Ç–∏–ø –∑–∞—Ä—è–¥–∫–∏, —Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥ "5-–º–∏–Ω—É—Ç–Ω–∞—è"
        # –∏–ª–∏ "10-–º–∏–Ω—É—Ç–Ω–∞—è";\n' '–ù–∞—á–∏–Ω–∞–µ—Ç–µ —Ä–∞—Å—á—ë—Ç –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –≤–µ—Å–∞ –∏ –í–∞—Å –ø—Ä–æ—Å—è—Ç —É–∫–∞–∑–∞—Ç—å –ø–æ–ª, —Ç–æ —Å–∫–∞–∂–∏—Ç–µ "–º—É–∂—Å–∫–æ–π" –∏–ª–∏
        # "–∂–µ–Ω—Å–∫–∏–π".–¢–∞–∫–∂–µ –ø–µ—Ä–µ–¥ –∏ –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –í–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞–∑–º–∏–Ω–∫—É –∏ –∑–∞–º–∏–Ω–∫—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ '
        # '—Å–æ–≥–ª–∞—Å–∏—Ç—å –∏–ª–∏ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –∏—Ö –≤—ã–ø–æ–ª–Ω—è—Ç—å –í—ã –º–æ–∂–µ—Ç–µ —Å –ø–æ–º–æ—â—å—é –ø—Ä–æ—Å—Ç—ã—Ö –∫–æ–º–∞–Ω–¥ "–¥–∞" –∏ "–Ω–µ—Ç".'

    elif command == '—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å':
        answer_options = ['–û—á–µ–Ω—å –∑–¥–æ—Ä–æ–≤–æ, —á—Ç–æ –≤—ã —Å–ø—Ä–æ—Å–∏–ª–∏ –º–µ–Ω—è –ø—Ä–æ —ç—Ç–æ. –í –º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤—Ö–æ–¥–∏—Ç:\n'
                          'üßò‚Äç‚ôÇÔ∏è –£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞\n'
                          'üèÉ‚Äç‚ôÇÔ∏è –ö–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞\n'
                          'üèãÔ∏è‚Äç‚ôÄÔ∏è –°–∏–ª–æ–≤–∞—è —Ñ—É–ª–ª–±–∞–¥–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞\n'
                          'üò¥ –§–∞–∑—ã —Å–Ω–∞\n'
                          'ü•õ –í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å\n'
                          '–ö –∫–∞–∂–¥–æ–º—É —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—é –µ—Å—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∏ GIF, –Ω–∞–≥–ª—è–¥–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å '
                          '—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ. –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ø–∏—Å–∫—É, —Å–∫–∞–∂–∏—Ç–µ –ü–æ–µ—Ö–∞–ª–∏.',

                          '–Ø —Ä–∞–¥–∞, —á—Ç–æ –≤—ã —Ä–µ—à–∏–ª–∏ —Å–ø—Ä–æ—Å–∏—Ç—å –º–µ–Ω—è –æ–± —ç—Ç–æ–º. –ï—Å–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç—å –≤–∫—Ä–∞—Ç—Ü–µ, —Ç–æ –≤ –º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª '
                          '–≤—Ö–æ–¥–∏—Ç:\n'
                          'üßò‚Äç‚ôÇÔ∏è –£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞\n'
                          'üèÉ‚Äç‚ôÇÔ∏è –ö–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞\n'
                          'üèãÔ∏è‚Äç‚ôÄÔ∏è –°–∏–ª–æ–≤–∞—è —Ñ—É–ª–ª–±–∞–¥–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞\n'
                          'üò¥ –§–∞–∑—ã —Å–Ω–∞\n'
                          'ü•õ –í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å\n'
                          '–ö –∫–∞–∂–¥–æ–º—É –∏–∑ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ GIF, –Ω–∞–≥–ª—è–¥–Ω–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â–∏–π , '
                          '–∫–∞–∫ –≤—ã–ø–æ–ª–Ω—è—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ. –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ø–∏—Å–∫—É, —Å–∫–∞–∂–∏—Ç–µ "–ü–æ–µ—Ö–∞–ª–∏".']

        resp.update(dict(response=dict(text=f'{random.choice(answer_options)} \n', buttons=[
            dict(title='–ü–æ–µ—Ö–∞–ª–∏!', hide=True),
            dict(title='–ü–æ–º–æ—â—å', hide=False)
        ])))
        context.set_state(MainGroup.state_1)
        return dict_to_json(resp, ensure_ascii=False, indent=2)

    elif state in (MainGroup.state_1, None):
        # answer_options = ['–í–∞—É, –í—ã —É–∂–µ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —à–∞–≥–∞—Ö –æ—Ç –∑–¥–æ—Ä–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏ –æ—á–µ–Ω—å —Ä–∞–¥–∞ –∑–∞ –í–∞—Å üòç. '
        #                   '–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ, —á–µ–º —Ö–æ—Ç–∏—Ç–µ –∑–∞–Ω—è—Ç—å—Å—è –∏–ª–∏ —á—Ç–æ –í–∞–º –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å:'
        #                   ' "–ó–∞—Ä—è–¥–∫–∞", "–ö–∞—Ä–¥–∏–æ", "–°–∏–ª–æ–≤–∞—è", "–§–∞–∑—ã —Å–Ω–∞" –∏–ª–∏ "–í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å".',
        #
        #                   '–í—ã —É–∂–µ —Å–æ–≤—Å–µ–º-—Å–æ–≤—Å–µ–º –±–ª–∏–∑–∫–æ –∫ –∑–¥–æ—Ä–æ–≤–æ–π –∂–∏–∑–Ω–∏ üòç, –≥–æ—Ä–∂—É—Å—å –í–∞–º–∏. '
        #                   '–í—Ä–µ–º—è –≤—ã–±–∏—Ä–∞—Ç—å, —á–µ–º —Ö–æ—Ç–∏—Ç–µ –∑–∞–Ω—è—Ç—å—Å—è –∏–ª–∏ —á—Ç–æ –í–∞–º –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å:\n'
        #                   '"–ó–∞—Ä—è–¥–∫–∞", "–ö–∞—Ä–¥–∏–æ", "–°–∏–ª–æ–≤–∞—è", "–§–∞–∑—ã —Å–Ω–∞" –∏–ª–∏ "–í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å".']
        show_main_menu(context, resp)
        context.reset_data()
    elif state == MainGroup.Sport.state_home and any_from('—Å–ø–æ—Ä—Ç', '—Ç—Ä–µ–Ω', in_=command) and not \
            any_from('–∑–∞—Ä—è–¥–∫', '—Å–∏–ª–æ–≤', '–∫–∞—Ä–¥–∏–æ', in_=command):
        resp.response = ResponseField(
            text='–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∏–∫—Ç–æ –Ω–µ —É–≤–∏–¥–∏—Ç :)',
            tts='–î–∞–∞, —ç—Ç–æ —Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –≤–µ—Ç–∫–∞ (–∑–∞—Ç—ã—á–∫–∞ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –≤–µ—Ç–∫–∏)',
            card=Card(
                type=CardType.ItemsList,
                header='–ö–∞–∫—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –≤—ã–±–µ—Ä–µ—Ç–µ?',
                items=[
                    Item(
                        title='–∫–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞',
                        button='–∫–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞',
                        description='–æ–ø–∏—Å–∞–Ω–∏–µ...',
                        image_id='1533899/13a130643a2fcdac537a'
                    ),
                    Item(
                        title='—Å–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞',
                        button='—Å–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞',
                        description='–æ–ø–∏—Å–∞–Ω–∏–µ...',
                        image_id='1533899/f030bee0ec7edea516e3'
                    ),
                    Item(
                        title='—É—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞',
                        button='—É—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞',
                        description='–æ–ø–∏—Å–∞–Ω–∏–µ...',
                        image_id='1540737/cc26a14712e6995a6624'
                    ),
                    Item(
                        title='–≤–µ—Ä–Ω—É—Ç—Å—å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é',
                        button='–ù–∞–∑–∞–¥',
                        description='–æ–ø–∏—Å–∞–Ω–∏–µ...',
                        image_id='1030494/cc3631c8499cdc8daf8b'
                    )
                ]
            )
        )
    elif state in MainGroup:
        if any_from('–≤–µ—Ä–Ω—É—Ç—å—Å—è', '–Ω–∞–∑–∞–¥', '–æ—Å–Ω–æ–≤', '–¥–æ–º–æ–π', '–Ω–∞—á–∞–ª–æ', in_=command):
            show_main_menu(context, resp)
        elif state == MainGroup.Sport.state_home:
            if '–≤–æ–¥' in command or '–±–∞–ª–∞–Ω—Å' in command:

                resp.response = ResponseField(
                    text=[
                        '–í–æ–¥–∞ –∂–∏–∑–Ω–µ–Ω–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∫–∞–∂–¥–æ–º—É —á–µ–ª–æ–≤–µ–∫—É, –∞ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –µ—ë –¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Ä–º—ã —É–ª—É—á—à–∞–µ—Ç '
                        '–º–µ—Ç–∞–±–æ–ª–∏–∑–º.'
                        '–Ø –ø–æ–¥—Å–∫–∞–∂—É, –∫–∞–∫–æ–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–∏–≤–∞—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è. –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, '
                        '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –í–∞—à –≤–µ—Å.',

                        '–í–æ–¥–∞ –Ω—É–∂–Ω–∞ –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã—Ö –≤–µ—â–µ—Å—Ç–≤. —è —Ä–∞—Å—Å–∫–∞–∂—É, –∫–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –í–∞–º –Ω—É–∂–Ω–æ '
                        '–≤—ã–ø–∏–≤–∞—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è üòâ\n'
                        '–ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –í–∞—à –≤–µ—Å.'

                        '–¢–∞–∫ –∫–∞–∫ –º—ã —Å–æ—Å—Ç–æ–∏–º –∏–∑ –≤–æ–¥—ã –ø—Ä–∏–º–µ—Ä–Ω–æ –Ω–∞ 70% üê≥, —Ç–æ —É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å –µ—ë –≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ '
                        '–æ—á–µ–Ω—å'
                        '–≤–∞–∂–Ω–æ.\n'
                        '–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ üòâ , —è –ø–æ–¥—Å–∫–∞–∂—É, –∫–∞–∫–æ–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–∏–≤–∞—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ '
                        '–¥–Ω—è.\n'
                        '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Ç–æ—á–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –æ–±—ä—ë–º –≤–æ–¥—ã, –º–Ω–µ –Ω—É–∂–µ–Ω –≤–µ—Å —á–µ–ª–æ–≤–µ–∫–∞. –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, '
                        '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Å –í–∞—à–µ–≥–æ —Ç–µ–ª–∞ –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö.']
                )
                context.set_state(MainGroup.Water.state_1)

            elif '—Å–æ–Ω' in command or '—Å–Ω–∞' in command or '—Ñ–∞–∑' in command:
                resp.response = ResponseField(
                    text=['–ó–¥–æ—Ä–æ–≤–æ, —á—Ç–æ –í—ã —Ä–µ—à–∏–ª–∏ —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Å–≤–æ–∏–º —Å–Ω–æ–º. –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –≤–æ —Å–∫–æ–ª—å–∫–æ –í—ã —Ö–æ—Ç–∏—Ç–µ '
                          '–ø—Ä–æ—Å–Ω—É—Ç—å—Å—è, –∞ —è —Ä–∞—Å—Å—á–∏—Ç–∞—é –∏–¥–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è, –≤ –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—É–¥–µ—Ç –ª–µ—á—å —Å–ø–∞—Ç—å.',

                          '–°–æ–Ω - —Ñ–∏–∑–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å —á–µ–ª–æ–≤–µ–∫–∞, –µ–≥–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –Ω–µ–≥–∞—Ç–∏–≤–Ω–æ –≤–ª–∏—è–µ—Ç –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ –∏ '
                          '–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è. –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –≤–æ —Å–∫–æ–ª—å–∫–æ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—Å–Ω—É—Ç—å—Å—è, –∞ —è —Ä–∞—Å—Å—á–∏—Ç–∞—é '
                          '–∏–¥–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è, –≤ –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—É–¥–µ—Ç –ª–µ—á—å —Å–ø–∞—Ç—å,—á—Ç–æ–±—ã —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –±–æ–¥—Ä–æ –≤ '
                          '—Ç–µ—á–µ–Ω–∏–µ –≤—Å–µ–≥–æ –¥–Ω—è.']
                )
                MainGroup.Dream.state_1.set(context)

            elif '—Å–∏–ª' in command:
                # answer_options = [ '–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –ö–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –Ω–µ—Å—É—Ç –æ–≥—Ä–æ–º–Ω—É—é –ø–æ–ª—å–∑—É, –∞ —Ç–∞–∫–∂–µ –ø–æ–¥–Ω–∏–º–∞—é—Ç
                # –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø ' '–∫–∞—Ä–¥–∏–æ:  –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–ª–∏ —Å–æ —Å–∫–∞–∫–∞–ª–∫–æ–π.',
                #
                #     '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Äüòç! –ù–∞–≥—Ä—É–∂–∞—è —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç—É—é —Å–∏—Å—Ç–µ–º—É, –º—ã —É–∫—Ä–µ–ø–ª—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø '
                #     '–∫–∞—Ä–¥–∏–æ: –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–ª–∏ —Å–æ —Å–∫–∞–∫–∞–ª–∫–æ–π.']
                resp.response = ResponseField(
                    text=[
                        '–•–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞–∑–º–∏–Ω–∫—É –ø–µ—Ä–µ–¥ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–æ–π?',
                        # '–•–æ—Ç–∏—Ç–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —Ç—è–∂—ë–ª—ã–º –Ω–∞–≥—Ä—É–∑–∫–∞–º —Å –ø–æ–º–æ—â—å—é —Ä–∞–∑–º–∏–Ω–∫–∏?'
                    ],
                    card=Card(
                        type=CardType.ItemsList,
                        header='–•–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞–∑–º–∏–Ω–∫—É?',
                        items=[
                            Item(title='–í—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞–∑–º–∏–Ω–∫—É', button='–î–∞', image_id='213044/9c13b9b997d78cde2579'),
                            Item(title='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ —Ä–∞–∑–º–∏–Ω–∫–∏', button='–ù–µ—Ç', image_id='1540737/cc47e154fc7c83b6ba0d')
                        ]
                    )
                )
                context.set_state(MainGroup.Sport.Wrap.WarmUp.qw)
                context.update_data(callback=start_power_training)

            elif '–∫–∞—Ä–¥' in command:
                answer_options = [
                    '–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –ö–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –Ω–µ—Å—É—Ç –æ–≥—Ä–æ–º–Ω—É—é –ø–æ–ª—å–∑—É, –∞ —Ç–∞–∫–∂–µ –ø–æ–¥–Ω–∏–º–∞—é—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø '
                    '–∫–∞—Ä–¥–∏–æ:  –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–ª–∏ —Å–æ —Å–∫–∞–∫–∞–ª–∫–æ–π.',

                    '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Äüòç! –ù–∞–≥—Ä—É–∂–∞—è —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç—É—é —Å–∏—Å—Ç–µ–º—É, –º—ã —É–∫—Ä–µ–ø–ª—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø '
                    '–∫–∞—Ä–¥–∏–æ: –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–ª–∏ —Å–æ —Å–∫–∞–∫–∞–ª–∫–æ–π.']
                resp.update({
                    'response': {
                        'text': f'{random.choice(answer_options)}',
                        'card': {
                            'type': 'ItemsList',
                            'header': {
                                'text': '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–∞—Ä–¥–∏–æ'
                            },
                            'items': [
                                {"title": '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è', "button": {"text": '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è'},
                                 "image_id": '1533899/13a130643a2fcdac537a'},
                                {"title": '–°–æ —Å–∫–∞–∫–∞–ª–∫–æ–π', "button": {"text": '–°–æ —Å–∫–∞–∫–∞–ª–∫–æ–π'},
                                 "image_id": '1540737/fa873a0d82d3696c73ff'}

                            ]
                        },

                    }
                })
                context.set_state(MainGroup.Sport.Cardio.state_1)

            elif '–∑–∞—Ä—è–¥' in command:
                answer_options = [
                    '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æüî•\n–î–µ—Ä–∂–∞—Ç—å —Ç–µ–ª–æ –≤ —Ñ–æ—Ä–º–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—Å–µ–º, –æ—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ, —á—Ç–æ –í—ã —ç—Ç–æ –ø–æ–Ω–∏–º–∞–µ—Ç–µ. –û–¥–Ω–∞–∫–æ '
                    '–∑–∞—Ä—è–¥–∫–∏ —Ç–æ–∂–µ –±—ã–≤–∞—é—Ç —Ä–∞–∑–Ω—ã–º–∏. –ö–∞–∫–æ–π —Ç–∏–ø –∑–∞—Ä—è–¥–∫–∏ –≤—ã–±–µ—Ä–∏—Ç–µ: 5-–º–∏–Ω—É—Ç–Ω–∞—è –∏–ª–∏ 10-–º–∏–Ω—É—Ç–Ω–∞—è?',
                    '–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Äü§©\n–ó–∞—Ä—è–¥–∫–∞ –Ω—É–∂–Ω–∞ –≤—Å–µ–º, –Ω–æ –Ω–µ–º–Ω–æ–≥–∏–µ —ç—Ç–æ –ø–æ–Ω–∏–º–∞—é—Ç, –∫ —Å—á–∞—Å—Ç—å—é –∫ –í–∞–º —ç—Ç–æ –Ω–µ '
                    '–æ—Ç–Ω–æ—Å–∏—Ç—Å—è. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞—Ä—è–¥–∫–∏: 5-–º–∏–Ω—É—Ç–Ω–∞—è –∏–ª–∏ 10-–º–∏–Ω—É—Ç–Ω–∞—è.',
                    '–î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ –ø—Ä–∏–≤–µ–¥—ë–º –í–∞—à–µ —Ç–µ–ª–æ –≤ —Ç–æ–Ω—É—Å. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞—Ä—è–¥–∫–∏:  5-–º–∏–Ω—É—Ç–Ω–∞—è –∏–ª–∏ 10-–º–∏–Ω—É—Ç–Ω–∞—è.']
                resp.update({
                    'response': {
                        'text': f'{random.choice(answer_options)}',
                        'card': {
                            'type': 'ItemsList',
                            'header': {
                                'text': '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞—Ä—è–¥–∫–∏'
                            },
                            'items': [
                                {"title": '5-–º–∏–Ω—É—Ç–Ω–∞—è', "button": {"text": '5-–º–∏–Ω—É—Ç–Ω–∞—è'},
                                 "image_id": '213044/99d6eb5c5125693a3154'},
                                {"title": '10-–º–∏–Ω—É—Ç–Ω–∞—è', "button": {"text": '10-–º–∏–Ω—É—Ç–Ω–∞—è'},
                                 "image_id": '997614/e024d33f7ffd1429b89c'}

                            ]
                        },

                    }
                })
                context.set_state(MainGroup.Sport.Zaradka.state_1)

            elif '–≤–µ—Å' in command:
                answer_options = [
                    '–ò–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å -  —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ –∫—Ä–∞—Å–∏–≤–∞—è —Ñ–∏–≥—É—Ä–∞, –Ω–æ –∏ –∑–¥–æ—Ä–æ–≤—å–µ –∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å. –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, '
                    '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –í–∞—à –ø–æ–ª, —á—Ç–æ–±—ã —è –º–æ–≥–ª–∞ —Å–¥–µ–ª–∞—Ç—å —Ç–æ—á–Ω—ã–π —Ä–∞—Å—á—ë—Ç.',
                    '–í–µ—Å —Ç–µ–ª–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞—à–µ–π –∂–∏–∑–Ω–∏. –ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É —Ç–∞–∫ –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å –µ–≥–æ '
                    '—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—É—é –Ω–æ—Ä–º—É. –ù–µ –±–µ—Å–ø–æ–∫–æ–π—Ç–µ—Å—å, —è —Ä–∞—Å—Å—á–∏—Ç–∞—é –í–∞—à—É –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é. –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ '
                    '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –í–∞—à –ø–æ–ª.']
                resp.update({
                    'response': {
                        'text': f'{random.choice(answer_options)}',
                        'card': {
                            'type': 'ItemsList',
                            'header': {
                                'text': '–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø–æ–ª'
                            },
                            'items': [
                                {"title": '–ú—É–∂—Å–∫–æ–π', "button": {"text": '–ú—É–∂—Å–∫–æ–π'},
                                 "image_id": '937455/de709f88951a3ae338fa'},
                                {"title": '–ñ–µ–Ω—Å–∫–∏–π', "button": {"text": '–ñ–µ–Ω—Å–∫–∏–π'},
                                 "image_id": '937455/92fe9a7a01d9e788cfec'}

                            ]
                        },

                    }
                })
                context.set_state(MainGroup.Weight.state_1)

            else:
                resp = show_main_menu(
                    context,
                    resp,
                    text='–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –ø–æ–Ω—è–ª–∞ –≤–∞—Åüò£\n–î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º –∑–∞–Ω–æ–≤–æ –≤—ã–±—Ä–∞—Ç—å –∑–∞–Ω—è—Ç–∏–µ!\n'
                         '"–ö–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", "–°–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", "–£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞", "–í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å", "–ò–¥–µ–∞–ª—å–Ω—ã–π '
                         '–≤–µ—Å",–∏–ª–∏ "–§–∞–∑—ã —Å–Ω–∞".',
                    card_text='–î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º –∑–∞–Ω–æ–≤–æ –≤—ã–±—Ä–∞—Ç—å –∑–∞–Ω—è—Ç–∏–µ!'
                )
        elif state in MainGroup.Dream:
            dream.dream_handler(context, req, resp)
        elif state in MainGroup.Water:
            water.water_handler(context, req, resp)
        elif state in MainGroup.Weight:
            weight.weight_handler(context, req, resp)

        elif state in MainGroup.Sport.Cardio:
            handlers.sport.cardio.cardio_handler(context, req, resp)

        elif state in MainGroup.Sport.Zaradka:
            if state == MainGroup.Sport.Zaradka.state_1:
                if '–ø—è—Ç' in command or '5' in command:
                    resp.update({
                        'response': {
                            'text': '–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∑–∞—Ä—è–¥ –±–æ–¥—Ä–æ—Å—Ç–∏! –ö–∞–∂–¥–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –¥–ª–∏—Ç—Å—è –º–∏–Ω—É—Ç—É.–ü–µ—Ä–µ–¥ '
                                    '–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∫–∞–∂–¥–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –í—ã –º–æ–∂–µ—Ç–µ –∏–∑—É—á–∏—Ç—å –µ–≥–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ, '
                                    '–Ω–∞—á–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É.'
                                    '–í—ã –≥–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –∏–ª–∏ –ø–æ–¥–±–µ—Ä—ë–º –¥—Ä—É–≥—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É?',
                            'card': {
                                'type': 'ItemsList',
                                'header': {
                                    'text': '–ü—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –∑–∞—Ä—è–¥–∫–∏'
                                },
                                'items': [
                                    {"title": '–Ø –≥–æ—Ç–æ–≤', "button": {"text": '–Ø –≥–æ—Ç–æ–≤'},
                                     "image_id": '997614/72ab6692a3db3f4e3056'},
                                    {"title": '–í—ã–±–µ—Ä–µ–º –¥—Ä—É–≥—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É',
                                     "button": {"text": '–í—ã–±–µ—Ä–µ–º –¥—Ä—É–≥—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É'},
                                     "image_id": '1030494/cc3631c8499cdc8daf8b'}

                                ]
                            }

                        }
                    })
                    context.set_state(MainGroup.Sport.Zaradka.Five.start)
                elif '–¥–µ—Å' in command or '10' in command:
                    resp.update({
                        'response': {
                            'text': '–ò—Ç–∞–∫, –Ω–∞—á–∏–Ω–∞–µ–º –Ω–∞—à—É –∞–∫—Ç–∏–≤–Ω—É—é 10-–º–∏–Ω—É—Ç–Ω—É—é –∑–∞—Ä—è–¥–∫—É. –ù–∞–¥–µ—é—Å—å –í—ã –ø–æ–ª–Ω—ã —ç–Ω—Ç—É–∑–∏–∞–∑–º–∞. '
                                    '–ö–∞–∂–¥–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –¥–ª–∏—Ç—Å—è 60 —Å–µ–∫—É–Ω–¥.\n'
                                    '–ü–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∫–∞–∂–¥–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –í—ã –º–æ–∂–µ—Ç–µ –∏–∑—É—á–∏—Ç—å –µ–≥–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ, '
                                    '–Ω–∞—á–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É. –í—ã –≥–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å '
                                    '–∏–ª–∏ –ø–æ–¥–±–µ—Ä—ë–º –¥—Ä—É–≥—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É?',
                            'card': {
                                'type': 'ItemsList',
                                'header': {
                                    'text': '–ü—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –∑–∞—Ä—è–¥–∫–∏'
                                },
                                'items': [
                                    {"title": '–Ø –≥–æ—Ç–æ–≤', "button": {"text": '–Ø –≥–æ—Ç–æ–≤'},
                                     "image_id": '997614/72ab6692a3db3f4e3056'},
                                    {"title": '–í—ã–±–µ—Ä–µ–º –¥—Ä—É–≥—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É',
                                     "button": {"text": '–í—ã–±–µ—Ä–µ–º –¥—Ä—É–≥—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É'},
                                     "image_id": '1030494/cc3631c8499cdc8daf8b'}

                                ]
                            }

                        }
                    })
                    context.set_state(MainGroup.Sport.Zaradka.Ten.start)
                else:
                    resp.update({
                        'response': {
                            'text': '–£—Ç–æ—á–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—è—Ç–∏–º–∏–Ω—É—Ç–Ω—É—é –∏–ª–∏ –¥–µ—Å—è—Ç–∏–º–∏–Ω—É—Ç–Ω—É—é '
                                    '—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É?',
                            'buttons': [
                                {
                                    'title': '–ø—è—Ç–∏–º–∏–Ω—É—Ç–Ω–∞—è',
                                    'hide': True
                                },
                                {
                                    'title': '–î–µ—Å—è—Ç–∏–º–∏–Ω—É—Ç–Ω–∞—è',
                                    'hide': True
                                }
                            ]

                        }
                    })
            elif state in MainGroup.Sport.Zaradka.Ten:
                if state in (MainGroup.Sport.Zaradka.Ten.start, MainGroup.Sport.Zaradka.Ten.final):
                    if '–¥—Ä—É–≥' in command or '–Ω–µ' in command or '–º–µ–Ω—é' in command or '–≤–µ—Ä–Ω' in command:
                        resp.update({
                            'response': {
                                'text': '–ß–µ–º –∑–∞–π–º—ë–º—Å—è –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑? –í—ã–±–∏—Ä–∞–π—Ç–µ: "–ö–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", "–°–∏–ª–æ–≤–∞—è '
                                        '—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", "–£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞", "–í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å", "–ò–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å", '
                                        '–∏–ª–∏ "–§–∞–∑—ã —Å–Ω–∞".',
                                'card': {
                                    'type': 'ItemsList',
                                    'header': {
                                        'text': '–ß–µ–º –∑–∞–π–º—ë–º—Å—è –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑? #–ö–Ω–æ–ø–∫–∞ "–∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å" –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞#'
                                    },
                                    'items': [
                                        {"title": '–∫–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞', 'button': {"text": '–∫–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞'},
                                         "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...', "image_id": '1533899/13a130643a2fcdac537a'},
                                        {"title": '—Å–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞', "button": {"text": '—Å–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞'},
                                         "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...', "image_id": '1533899/f030bee0ec7edea516e3'},
                                        {"title": '—É—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞', "button": {"text": '—É—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞'},
                                         "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...', "image_id": '1540737/cc26a14712e6995a6624'},
                                        {"title": '–≤–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å', "button": {"text": '–≤–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å'},
                                         "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...', "image_id": '1540737/dc7c3c075dd3ecc22fc7'},
                                        {"title": '—Ñ–∞–∑—ã —Å–Ω–∞', "button": {"text": '—Ñ–∞–∑—ã —Å–Ω–∞'},
                                         "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...',
                                         "image_id": '213044/e81c096eeedd03ef9a2e'}

                                    ]
                                }
                            }
                        })
                        context.set_state(MainGroup.Sport.state_home)
                    elif is_positive(command):
                        resp.update({
                            'response': {
                                'text': '–ü—Ä–∏—Å—Ç—É–ø–∞–µ–º  –∫ —Ä–∞—Å—Ç–∏—Ä–∞–Ω–∏—é —à–µ–∏!',
                                'card': {
                                    'type': 'BigImage',
                                    "image_id": '1540737/187806e12d9cfa5a2e7b',
                                    "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 1',
                                    "description": '–†–∞—Å—Ç–∏—Ä–∞–Ω–∏–µ —à–µ–∏'
                                },
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task1)
                    else:
                        resp.update(
                            dict(
                                response=dict(
                                    text='–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –ø–æ–Ω—è–ª–∞ –≤–∞—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ: –ú—ã –Ω–∞—á–∏–Ω–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ '
                                         '—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é?',
                                    buttons=[
                                        dict(title='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', hide=True),
                                        dict(title='–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É', hide=True)
                                    ]
                                )
                            )
                        )
                elif state in (
                        MainGroup.Sport.Zaradka.Ten.task1, MainGroup.Sport.Zaradka.Ten.task1_help,
                        MainGroup.Sport.Zaradka.Ten.task1_do) or (
                        state == MainGroup.Sport.Zaradka.Ten.final and '–ø–æ–≤—Ç–æ—Ä' in command):
                    if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                        resp.update({
                            'response': {
                                'text': '–ù–∞—á–∏–Ω–∞–µ–º –ø–æ–≥–ª–∞–∂–∏–≤–∞–Ω–∏—è —Ç—ã–ª—å–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã —à–µ–∏ –æ–±–µ–∏–º–∏ —Ä—É–∫–∞–º–∏. –ò—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ '
                                        '–ø—Ä–∏–∂–∏–º–∞—Ç—å –ª–∞–¥–æ–Ω—è–º–∏ –∫ –º–∞—Å—Å–∏—Ä—É–µ–º–æ–π —á–∞—Å—Ç–∏. –ü–µ—Ä–µ–º–µ—â–∞–µ–º—Å—è –æ—Ç –≥—Ä–∞–Ω–∏—Ü—ã –≤–æ–ª–æ—Å—è–Ω–æ–≥–æ '
                                        '–ø–æ–∫—Ä–æ–≤–∞ –¥–æ –ø–ª–µ—á–µ–≤–æ–≥–æ —Å—É—Å—Ç–∞–≤–∞.',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task1_help)
                    elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                        resp.update({
                            'response': {
                                'text': f'{random.choice(motivations)}',
                                'tts': f'{random.choice(tracks_sixteen)}',
                                'buttons': [
                                    {
                                        'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                        'hide': True
                                    }
                                ]
                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task1_do)
                    elif state in (
                            MainGroup.Sport.Zaradka.Ten.task1_do, MainGroup.Sport.Zaradka.Ten.task1_help,
                            MainGroup.Sport.Zaradka.Ten.task1) and (
                            '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                        resp.update({
                            'response': {
                                'text': '–≠—Ç–æ –±—ã–ª–æ –ª–µ–≥–∫–æ. –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É—Å–ª–æ–∂–Ω—è–µ–º—Å—è –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –Ω–∞–∫–ª–æ–Ω–∞–º –≥–æ–ª–æ–≤—ã.',
                                'card': {
                                    'type': 'BigImage',
                                    "image_id": '997614/580e288f2c7678c15fc1',
                                    "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 2',
                                    "description": '–ù–∞–∫–ª–æ–Ω—ã –≥–æ–ª–æ–≤—ã'
                                },
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task2)
                    else:
                        resp.update({
                            'response': {
                                'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å '
                                        '—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                elif state in (
                        MainGroup.Sport.Zaradka.Ten.task2, MainGroup.Sport.Zaradka.Ten.task2_help,
                        MainGroup.Sport.Zaradka.Ten.task2_do):
                    if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                        resp.update({
                            'response': {
                                'text': '–ü–ª–∞–≤–Ω–æ –Ω–∞–∫–ª–æ–Ω—è–π—Ç–µ –≥–æ–ª–æ–≤—É –∫ –ø—Ä–∞–≤–æ–º—É, –∞ –∑–∞—Ç–µ–º –∫ –ª–µ–≤–æ–º—É –ø–ª–µ—á—É. –†–µ–∫–æ–º–µ–Ω–¥—É—é '
                                        '–¥–µ–ª–∞—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –∫–∞–∫ –º–æ–∂–Ω–æ –º–µ–¥–ª–µ–Ω–Ω–µ–µ.',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task2_help)
                    elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                        resp.update({
                            'response': {
                                'text': f'{random.choice(motivations)}',
                                'tts': f'{random.choice(tracks_sixteen)}',
                                'buttons': [
                                    {
                                        'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                        'hide': True
                                    }
                                ]
                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task2_do)
                    elif state in (
                            MainGroup.Sport.Zaradka.Ten.task2_do, MainGroup.Sport.Zaradka.Ten.task2_help,
                            MainGroup.Sport.Zaradka.Ten.task2) and (
                            '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                        resp.update({
                            'response': {
                                'text': '–£ –í–∞—Å –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è! –†–∞–∑–º–∏–Ω–∞–µ–º –∫–∏—Å—Ç–∏ —Å –ø–æ–º–æ—â—å—é –∫—Ä—É–≥–æ–≤—ã—Ö –≤—Ä–∞—â–µ–Ω–∏–π.',
                                'card': {
                                    'type': 'BigImage',
                                    "image_id": '213044/1e95ab71033fd2f5a670',
                                    "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 3',
                                    "description": '–∫—Ä—É–≥–æ–≤—ã–µ –≤—Ä–∞—â–µ–Ω–∏—è –∫–∏—Å—Ç–µ–π'
                                },
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task3)
                    else:
                        resp.update({
                            'response': {
                                'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å '
                                        '—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                elif state in (
                        MainGroup.Sport.Zaradka.Ten.task3, MainGroup.Sport.Zaradka.Ten.task3_help,
                        MainGroup.Sport.Zaradka.Ten.task3_do):
                    if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                        resp.update({
                            'response': {
                                'text': '–õ–∞–¥–æ–Ω–∏ —Ä–∞–∑–∂–∞—Ç—ã. –£–¥–µ—Ä–∂–∏–≤–∞—è –ø–ª–µ—á–∏ –∏ –ø—Ä–µ–¥–ø–ª–µ—á—å—è –Ω–µ–ø–æ–¥–≤–∏–∂–Ω—ã–º–∏, –≤—Ä–∞—â–µ–Ω–∏–µ '
                                        '–æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫–∏—Å—Ç—è–º–∏.',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task3_help)
                    elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                        resp.update({
                            'response': {
                                'text': f'{random.choice(motivations)}',
                                'tts': f'{random.choice(tracks_sixteen)}',
                                'buttons': [
                                    {
                                        'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                        'hide': True
                                    }
                                ]
                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task3_do)
                    elif state in (
                            MainGroup.Sport.Zaradka.Ten.task3_do, MainGroup.Sport.Zaradka.Ten.task3_help,
                            MainGroup.Sport.Zaradka.Ten.task3) and (
                            '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                        resp.update({
                            'response': {
                                'text': '–ü–æ–¥–Ω–∞–∂–º–∏—Ç–µ! –ù–∞—á–∏–Ω–∞–µ–º –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–∞–∫–ª–æ–Ω—ã –∫–æ—Ä–ø—É—Å–∞.',
                                'card': {
                                    'type': 'BigImage',
                                    "image_id": '965417/1f515b785dbec2f0ce30',
                                    "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 4',
                                    "description": '–ù–∞–∫–ª–æ–Ω—ã –∫–æ—Ä–ø—É—Å–∞'
                                },
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task4)
                    else:
                        resp.update({
                            'response': {
                                'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å '
                                        '—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                elif state in (
                        MainGroup.Sport.Zaradka.Ten.task4, MainGroup.Sport.Zaradka.Ten.task4_help,
                        MainGroup.Sport.Zaradka.Ten.task4_do):
                    if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                        resp.update({
                            'response': {
                                'text': '–ù–µ –æ—Ç—Ä—ã–≤–∞—è –Ω–æ–≥ –æ—Ç –ø–æ–ª–∞, –Ω–∞—á–∏–Ω–∞–µ–º –Ω–∞–∫–ª–æ–Ω—è—Ç—å —Ç–µ–ª–æ –≤ –ø—Ä–∞–≤—É—é, –∞ –∑–∞—Ç–µ–º –≤ –ª–µ–≤—É—é '
                                        '—Å—Ç–æ—Ä–æ–Ω—É, —Ä—É–∫–∏ –ª—É—á—à–µ –¥–µ—Ä–∂–∞—Ç—å –Ω–∞ –ø–æ—è—Å–µ.',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task4_help)
                    elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                        resp.update({
                            'response': {
                                'text': f'{random.choice(motivations)}',
                                'tts': f'{random.choice(tracks_sixteen)}',
                                'buttons': [
                                    {
                                        'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                        'hide': True
                                    }
                                ]
                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task4_do)
                    elif state in (
                            MainGroup.Sport.Zaradka.Ten.task4_do, MainGroup.Sport.Zaradka.Ten.task4_help,
                            MainGroup.Sport.Zaradka.Ten.task4) and (
                            '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                        resp.update({
                            'response': {
                                'text': '–¢–µ–ø–µ—Ä—å —Å–Ω–æ–≤–∞ –ø—Ä–æ—Å—Ç–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ - –≤—Ä–∞—â–µ–Ω–∏–µ —Ä—É–∫.',
                                'card': {
                                    'type': 'BigImage',
                                    "image_id": '997614/ad34ebeedaa748ebfb6b',
                                    "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 5',
                                    "description": '–í—Ä–∞—â–µ–Ω–∏–µ —Ä—É–∫'
                                },
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task5)
                    else:
                        resp.update({
                            'response': {
                                'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å '
                                        '—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                elif state in (
                        MainGroup.Sport.Zaradka.Ten.task5, MainGroup.Sport.Zaradka.Ten.task5_help,
                        MainGroup.Sport.Zaradka.Ten.task5_do):
                    if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                        resp.update({
                            'response': {
                                'text': '–í—Å—Ç–∞–Ω—å—Ç–µ –ø—Ä—è–º–æ –∏ –≤—ã—Ç—è–Ω–∏—Ç–µ —Ä—É–∫–∏ –ø–æ —Å—Ç–æ—Ä–æ–Ω–∞–º. –¢–µ–ª–æ –æ–±—Ä–∞–∑—É–µ—Ç –±—É–∫–≤—É ¬´–¢¬ª. –≠—Ç–æ '
                                        '–∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ. –í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∫—Ä—É–≥–æ–≤—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è –ø—Ä—è–º—ã–º–∏ —Ä—É–∫–∞–º–∏ –≤–ø–µ—Ä—ë–¥, '
                                        '–∑–∞—Ç–µ–º ‚Äì –Ω–∞–∑–∞–¥.',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task5_help)
                    elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                        resp.update({
                            'response': {
                                'text': f'{random.choice(motivations)}',
                                'tts': f'{random.choice(tracks_sixteen)}',
                                'buttons': [
                                    {
                                        'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                        'hide': True
                                    }
                                ]
                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task5_do)
                    elif state in (
                            MainGroup.Sport.Zaradka.Ten.task5_do, MainGroup.Sport.Zaradka.Ten.task5_help,
                            MainGroup.Sport.Zaradka.Ten.task5) and (
                            '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                        resp.update({
                            'response': {
                                'text': '–ù–∞ –æ—á–µ—Ä–µ–¥–∏ –≤–µ—Å—ë–ª–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ - –∫—Ä—É–≥–æ–≤—ã–µ –≤—Ä–∞—â–µ–Ω–∏—è —Ç–∞–∑–æ–º.',
                                'card': {
                                    'type': 'BigImage',
                                    "image_id": '213044/6aeb0022c72fb9c0256f',
                                    "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 6',
                                    "description": '–∫—Ä—É–≥–æ–≤—ã–µ –≤—Ä–∞—â–µ–Ω–∏—è —Ç–∞–∑–æ–º'
                                },
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task6)
                    else:
                        resp.update({
                            'response': {
                                'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å '
                                        '—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                elif state in (
                        MainGroup.Sport.Zaradka.Ten.task6, MainGroup.Sport.Zaradka.Ten.task6_help,
                        MainGroup.Sport.Zaradka.Ten.task6_do):
                    if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                        resp.update({
                            'response': {
                                'text': '–ü–æ–ª–æ–∂–∏—Ç–µ —Ä—É–∫–∏ –Ω–∞ —Ç–∞–ª–∏—é, –Ω–æ–≥–∏ —Ä–∞—Å—Å—Ç–∞–≤—å—Ç–µ —à–∏—Ä–µ –ø–ª–µ—á. –ù–∞—á–Ω–∏—Ç–µ –≤—Ä–∞—â–∞—Ç—å —Ç–∞–∑–æ–º –ø–æ '
                                        '–∫—Ä—É–≥—É, –∫–∞–∫ –±—É–¥—Ç–æ —Å—Ç–∞—Ä–∞–µ—Ç–µ—Å—å –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –∫—Ä—É–≥ —è–≥–æ–¥–∏—Ü–∞–º–∏. –°—Ç–æ–ø—ã –Ω–µ –æ—Ç—Ä—ã–≤–∞—é—Ç—Å—è '
                                        '–æ—Ç –ø–æ–ª–∞, –≤—Ä–∞—â–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞ —Å—á–µ—Ç –¥–≤–∏–∂–µ–Ω–∏–π —Ç–∞–∑–∞, –∞ –Ω–µ –∫–æ—Ä–ø—É—Å–∞.',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task6_help)
                    elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                        resp.update({
                            'response': {
                                'text': f'{random.choice(motivations)}',
                                'tts': f'{random.choice(tracks_sixteen)}',
                                'buttons': [
                                    {
                                        'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                        'hide': True
                                    }
                                ]
                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task6_do)
                    elif state in (
                            MainGroup.Sport.Zaradka.Ten.task6_do, MainGroup.Sport.Zaradka.Ten.task6_help,
                            MainGroup.Sport.Zaradka.Ten.task6) and (
                            '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                        resp.update({
                            'response': {
                                'text': '–í—ã –º–æ–ª–æ–¥—Ü—ã, –æ—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ! –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–∂–∏–º–∞–Ω–∏—è. ',
                                'card': {
                                    'type': 'BigImage',
                                    "image_id": '1652229/36613a381d93ed552a89',
                                    "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 7',
                                    "description": '–û—Ç–∂–∏–º–∞–Ω–∏—è'
                                },
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task7)
                    else:
                        resp.update({
                            'response': {
                                'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å '
                                        '—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                elif state in (
                        MainGroup.Sport.Zaradka.Ten.task7, MainGroup.Sport.Zaradka.Ten.task7_help,
                        MainGroup.Sport.Zaradka.Ten.task7_do):
                    if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                        resp.update({
                            'response': {
                                'text': '–í –ø–ª–∞–Ω–∫–µ –æ–ø—É—Å–∫–∞–µ–º –∏ –ø–æ–¥–Ω–∏–º–∞–µ–º —Ç–µ–ª–æ —Å –ø–æ–º–æ—â—å—é —Å–≥–∏–±–∞–Ω–∏—è - —Ä–∞–∑–≥–∏–±–∞–Ω–∏—è —Ä—É–∫ –æ—Ç '
                                        '–ø–æ–ª–∞.',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task7_help)
                    elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                        resp.update({
                            'response': {
                                'text': f'{random.choice(motivations)}',
                                'tts': f'{random.choice(tracks_sixteen)}',
                                'buttons': [
                                    {
                                        'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                        'hide': True
                                    }
                                ]
                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task7_do)
                    elif state in (
                            MainGroup.Sport.Zaradka.Ten.task7_do, MainGroup.Sport.Zaradka.Ten.task7_help,
                            MainGroup.Sport.Zaradka.Ten.task7) and (
                            '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                        resp.update({
                            'response': {
                                'text': '–ê —Ç–µ–ø–µ—Ä—å –≤—ã–ø–æ–ª–Ω—è–µ–º –±–µ–≥ –Ω–∞ –º–µ—Å—Ç–µ.',
                                'card': {
                                    'type': 'BigImage',
                                    "image_id": '965417/8252b9ad0168a76edcfb',
                                    "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 8',
                                    "description": '–ë–µ–≥ –Ω–∞ –º–µ—Å—Ç–µ'
                                },
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task8)
                    else:
                        resp.update({
                            'response': {
                                'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å '
                                        '—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                elif state in (
                        MainGroup.Sport.Zaradka.Ten.task8, MainGroup.Sport.Zaradka.Ten.task8_help,
                        MainGroup.Sport.Zaradka.Ten.task8_do):
                    if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                        resp.update({
                            'response': {
                                'text': '–ü–æ —Å—É—Ç–∏ —ç—Ç–æ –æ–±—ã—á–Ω—ã–π –±–µ–≥, –Ω–æ –±–µ–∑ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è. –°–ø–∏–Ω—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–µ—Ä–∂–∞—Ç—å '
                                        '–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ä–æ–≤–Ω–æ; —Ä—É–∫–∏ —Å–æ–≥–Ω—É—Ç—å –≤ –ª–æ–∫—Ç—è—Ö, –Ω–µ –∑–∞–¥–∏—Ä–∞—è –∏ –Ω–µ —Ä–∞—Å—Å–ª–∞–±–ª—è—è –∏—Ö '
                                        '—Å–ª–∏—à–∫–æ–º —Å–∏–ª—å–Ω–æ',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task8_help)
                    elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                        resp.update({
                            'response': {
                                'text': f'{random.choice(motivations)}',
                                'tts': f'{random.choice(tracks_sixteen)}',
                                'buttons': [
                                    {
                                        'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                        'hide': True
                                    }
                                ]
                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task8_do)
                    elif state in (
                            MainGroup.Sport.Zaradka.Ten.task8_do, MainGroup.Sport.Zaradka.Ten.task8_help,
                            MainGroup.Sport.Zaradka.Ten.task8) and (
                            '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                        resp.update({
                            'response': {
                                'text': '–í—ã, –Ω–∞—Å—Ç–æ—è—â–∏–π —Å–ø–æ—Ä—Ç—Å–º–µ–Ω! –î–∞–ª–µ–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –Ω–∞–∫–ª–æ–Ω–∞–º –∫–æ—Ä–ø—É—Å–∞. ',
                                'card': {
                                    'type': 'BigImage',
                                    "image_id": '965417/49420910ad42b27d16ed',
                                    "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 9',
                                    "description": '–ù–∞–∫–ª–æ–Ω—ã –∫–æ—Ä–ø—É—Å–∞'
                                }
                                ,
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task9)
                    else:
                        resp.update({
                            'response': {
                                'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å '
                                        '—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                elif state in (
                        MainGroup.Sport.Zaradka.Ten.task9, MainGroup.Sport.Zaradka.Ten.task9_help,
                        MainGroup.Sport.Zaradka.Ten.task9_do):
                    if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                        resp.update({
                            'response': {
                                'text': '–ù–æ–≥–∏ –Ω–∞ —à–∏—Ä–∏–Ω–µ –ø–ª–µ—á, —Å–ø–∏–Ω–∞ –ø—Ä—è–º–∞—è, –ª–æ–ø–∞—Ç–∫–∏ —Å–≤–µ–¥–µ–Ω—ã, —Ä—É–∫–∏ –ø–æ–¥–Ω—è—Ç—ã –∫ —É—à–∞–º. '
                                        '–ù–∞–ø—Ä—è–≥–∏—Ç–µ –ø—Ä–µ—Å—Å –∏ –Ω–∞–∫–ª–æ–Ω—è–π—Ç–µ—Å—å –≤–Ω–∏–∑. –ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Ç—è–Ω—É—Ç—å—Å—è –≥—Ä—É–¥—å—é –∫ –±–µ–¥—Ä–∞–º, '
                                        '–∞ –Ω–µ —Ä—É–∫–∞–º–∏ –∫ –ø–æ–ª—É.',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task9_help)
                    elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                        resp.update({
                            'response': {
                                'text': f'{random.choice(motivations)}',
                                'tts': f'{random.choice(tracks_sixteen)}',
                                'buttons': [
                                    {
                                        'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                        'hide': True
                                    }
                                ]
                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task9_do)
                    elif state in (
                            MainGroup.Sport.Zaradka.Ten.task9_do, MainGroup.Sport.Zaradka.Ten.task9_help,
                            MainGroup.Sport.Zaradka.Ten.task9) and (
                            '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                        resp.update({
                            'response': {
                                'text': '–ü–æ–¥–Ω–∞–∂–º—ë–º, –ø–æ—Å–ª–µ–¥–Ω–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ - —ç—Ç–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –Ω–∞ –ø—Ä–µ—Å—Å, –∞ —Ç–æ—á–Ω–µ–µ –ø–æ–¥–Ω—è—Ç–∏–µ '
                                        '–∫–æ—Ä–ø—É—Å–∞ –ª—ë–∂–∞ –Ω–∞ —Å–ø–∏–Ω–µ. ',
                                'card': {
                                    'type': 'BigImage',
                                    "image_id": '997614/d843aa7bd19d82dfddbc',
                                    "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 10',
                                    "description": '–ü–æ–¥–Ω—è—Ç–∏–µ –∫–æ—Ä–ø—É—Å–∞ –ª—ë–∂–∞ –Ω–∞ —Å–ø–∏–Ω–µ'
                                },
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task10)
                    else:
                        resp.update({
                            'response': {
                                'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å '
                                        '—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                elif state in (
                        MainGroup.Sport.Zaradka.Ten.task10, MainGroup.Sport.Zaradka.Ten.task10_help,
                        MainGroup.Sport.Zaradka.Ten.task10_do):
                    if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                        resp.update({
                            'response': {
                                'text': '–õ–æ–∂–∏–º—Å—è –Ω–∞ —Å–ø–∏–Ω—É, –ø—Ä–∏–∂–∏–º–∞–µ–º –ø–æ—è—Å–Ω–∏—Ü—É –∫ –ø–æ–ª—É, –Ω–æ–≥–∏ —á—É—Ç—å —Å–≥–∏–±–∞–µ–º –≤ –∫–æ–ª–µ–Ω—è—Ö. '
                                        '–†—É–∫–∏ –∑–∞–∫—Ä–µ–ø–ª—è–µ–º –∑–∞ –≥–æ–ª–æ–≤–æ–π –∏–ª–∏ –Ω–∞ –≥—Ä—É–¥–∏. –õ–æ–∫—Ç–∏ —Ä–∞–∑–≤–æ–¥–∏–º –≤ —Å—Ç–æ—Ä–æ–Ω—ã.'
                                        '–ù–∞—á–∏–Ω–∞–µ–º —Å–≥–∏–±–∞–Ω–∏–µ —Ç—É–ª–æ–≤–∏—â–∞. –ü–æ–¥–±–æ—Ä–æ–¥–∫–æ–º —Ç—è–Ω–µ–º—Å—è –∫ –≥—Ä—É–¥–∏. –¢—è–Ω–µ–º—Å—è –¥–∞–ª—å—à–µ, '
                                        '—á—Ç–æ–±—ã –≤—Å–ª–µ–¥ –∑–∞ –≥–æ–ª–æ–≤–æ–π –∏ —à–µ–µ–π –æ—Ç –ø–æ–ª–∞ –æ—Ç—Ä—ã–≤–∞–ª–∞—Å—å —Å–ø–∏–Ω–∞.',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task10_help)
                    elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                        resp.update({
                            'response': {
                                'text': f'{random.choice(motivations)}',
                                'tts': f'{random.choice(tracks_sixteen)}',
                                'buttons': [
                                    {
                                        'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                        'hide': True
                                    }
                                ]
                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.task10_do)
                    elif state in (
                            MainGroup.Sport.Zaradka.Ten.task10_do, MainGroup.Sport.Zaradka.Ten.task10_help,
                            MainGroup.Sport.Zaradka.Ten.task10) and (
                            '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                        resp.update({
                            'response': {
                                'text': '–í—ã —Ö–æ—Ä–æ—à–æ –ø–æ—Ç—Ä—É–¥–∏–ª–∏—Å—å, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é –≤–∞—Å —Å –æ—á–µ—Ä–µ–¥–Ω–æ–π –ø–æ–±–µ–¥–æ–π! –ß—Ç–æ –≤—ã –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å—à–µ: –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É?',
                                'card': {
                                    'type': 'ItemsList',
                                    'header': {
                                        'text': '–ü–æ–≤—Ç–æ—Ä–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –∏–ª–∏ –≤–µ—Ä–Ω—ë–º—Å—è –≤ –º–µ–Ω—é?'
                                    },
                                    'items': [
                                        {"title": '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É', "button": {"text": '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É'},
                                         "image_id": '997614/15f977696a281092bcc0'},
                                        {"title": '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é',
                                         "button": {"text": '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'},
                                         "image_id": '1030494/cc3631c8499cdc8daf8b'}

                                    ]
                                }

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Ten.final)
                    else:
                        resp.update({
                            'response': {
                                'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å '
                                        '—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })

            elif state in MainGroup.Sport.Zaradka.Five:
                if state in (MainGroup.Sport.Zaradka.Five.start, MainGroup.Sport.Zaradka.Five.final):
                    if '–¥—Ä—É–≥' in command or '–Ω–µ' in command or '–º–µ–Ω—é' in command or '–≤–µ—Ä–Ω' in command:
                        resp.update({
                            'response': {
                                'text': '–ß–µ–º –∑–∞–π–º—ë–º—Å—è –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑? –í—ã–±–∏—Ä–∞–π—Ç–µ: "–ö–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", "–°–∏–ª–æ–≤–∞—è '
                                        '—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", "–£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞", "–í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å", "–ò–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å", '
                                        '–∏–ª–∏ "–§–∞–∑—ã —Å–Ω–∞".',
                                'card': {
                                    'type': 'ItemsList',
                                    'header': {
                                        'text': '–ß–µ–º –∑–∞–π–º—ë–º—Å—è –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑? #–ö–Ω–æ–ø–∫–∞ "–∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å" –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞#'
                                    },
                                    'items': [
                                        {"title": '–∫–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞', 'button': {"text": '–∫–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞'},
                                         "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...', "image_id": '1533899/13a130643a2fcdac537a'},
                                        {"title": '—Å–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞', "button": {"text": '—Å–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞'},
                                         "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...', "image_id": '1533899/f030bee0ec7edea516e3'},
                                        {"title": '—É—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞', "button": {"text": '—É—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞'},
                                         "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...', "image_id": '1540737/cc26a14712e6995a6624'},
                                        {"title": '–≤–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å', "button": {"text": '–≤–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å'},
                                         "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...', "image_id": '1540737/dc7c3c075dd3ecc22fc7'},
                                        {"title": '—Ñ–∞–∑—ã —Å–Ω–∞', "button": {"text": '—Ñ–∞–∑—ã —Å–Ω–∞'},
                                         "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...',
                                         "image_id": '213044/e81c096eeedd03ef9a2e'}

                                    ]
                                }
                            }
                        })
                        context.set_state(MainGroup.Sport.state_home)
                    elif is_positive(command):
                        resp.update({
                            'response': {
                                'text': '–û—Ç–∫—Ä—ã–≤–∞—é—Ç –Ω–∞—à—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –Ω–∞–∫–ª–æ–Ω—ã –≥–æ–ª–æ–≤—ã.',
                                'card': {
                                    'type': 'BigImage',
                                    "image_id": '1652229/ee34512c3b9684ab74b7',
                                    "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 1',
                                    "description": '–ù–∞–∫–ª–æ–Ω—ã –≥–æ–ª–æ–≤—ã'
                                }
                                ,
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Five.task1)
                    else:
                        resp.update({
                            'response': {
                                'text': '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –ø–æ–Ω—è–ª–∞ –≤–∞—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ: –ú—ã –Ω–∞—á–∏–Ω–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ '
                                        '—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é?'
                                ,
                                'buttons': [
                                    {
                                        'title': '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                elif state in (
                        MainGroup.Sport.Zaradka.Five.task1, MainGroup.Sport.Zaradka.Five.task1_help,
                        MainGroup.Sport.Zaradka.Five.task1_do) or (
                        state == MainGroup.Sport.Zaradka.Five.final and '–ø–æ–≤—Ç–æ—Ä' in command):
                    if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                        resp.update({
                            'response': {
                                'text': '–†—É–∫–∏ –Ω–∞ –ø–æ—è—Å–µ, –Ω–æ–≥–∏ –Ω–∞ —à–∏—Ä–∏–Ω–µ –ø–ª–µ—á, –≥—Ä—É–¥–Ω–∞—è –∫–ª–µ—Ç–∫–∞ —Ä–∞—Å–ø—Ä–∞–≤–ª–µ–Ω–∞, –∂–∏–≤–æ—Ç –≤—Ç—è–Ω—É—Ç. –ù–∞–∫–ª–æ–Ω—ã –≥–æ–ª–æ–≤—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏ –∫ –ø—Ä–∞–≤–æ–º—É –∏ –ª–µ–≤–æ–º—É –ø–ª–µ—á—É',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]
                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Five.task1_help)
                    elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                        resp.update({
                            'response': {
                                'text': f'{random.choice(motivations)}',
                                'tts': f'{random.choice(tracks_sixteen)}',
                                'buttons': [
                                    {
                                        'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                        'hide': True
                                    }
                                ]
                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Five.task1_do)
                    elif state in (
                            MainGroup.Sport.Zaradka.Five.task1_do, MainGroup.Sport.Zaradka.Five.task1_help,
                            MainGroup.Sport.Zaradka.Five.task1) and (
                            '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                        resp.update({
                            'response': {
                                'text': '–î–∞–ª–µ–µ —Ä–∞–∑–º–∏–Ω–∞–µ–º —Ä—É–∫–∏ –∫—Ä—É–≥–æ–≤—ã–º–∏ –≤—Ä–∞—â–µ–Ω–∏—è–º–∏.',
                                'card': {
                                    'type': 'BigImage',
                                    "image_id": '1521359/be1b4290513642ff2e69',
                                    "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 2',
                                    "description": '–ö—Ä—É–≥–æ–≤—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è —Ä—É–∫'
                                }
                                ,
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Five.task2)
                    else:
                        resp.update({
                            'response': {
                                'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"'
                                ,
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                elif state in (
                        MainGroup.Sport.Zaradka.Five.task2, MainGroup.Sport.Zaradka.Five.task2_help,
                        MainGroup.Sport.Zaradka.Five.task2_do):
                    if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                        resp.update({
                            'response': {
                                'text': ' –õ–∞–¥–æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–∂–∞—Ç—ã. –£–¥–µ—Ä–∂–∏–≤–∞—è –ø–ª–µ—á–∏ –∏ –ø—Ä–µ–¥–ø–ª–µ—á—å—è –Ω–µ–ø–æ–¥–≤–∏–∂–Ω—ã–º–∏, –≤—Ä–∞—â–∞–π—Ç–µ –∫–∏—Å—Ç—è–º–∏.',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Five.task2_help)
                    elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                        resp.update({
                            'response': {
                                'text': f'{random.choice(motivations)}',
                                'tts': f'{random.choice(tracks_sixteen)}',
                                'buttons': [
                                    {
                                        'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                        'hide': True
                                    }
                                ]
                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Five.task2_do)
                    elif state in (
                            MainGroup.Sport.Zaradka.Five.task2_do, MainGroup.Sport.Zaradka.Five.task2_help,
                            MainGroup.Sport.Zaradka.Five.task2) and (
                            '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                        resp.update({
                            'response': {
                                'text': '–ê —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–π–¥—ë–º –∫ –ø–æ–ª–Ω—ã–º –∫—Ä—É–≥–æ–≤—ã–º –≤—Ä–∞—â–µ–Ω–∏—è–º.',
                                'card': {
                                    'type': 'BigImage',
                                    "image_id": '1540737/207c36753da8da2dd64d',
                                    "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 3',
                                    "description": '–ü–æ–ª–Ω—ã–µ –∫—Ä—É–≥–æ–≤—ã–µ –≤—Ä–∞—â–µ–Ω–∏—è'
                                }
                                ,
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Five.task3)
                    else:
                        resp.update({
                            'response': {
                                'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"'
                                ,
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                elif state in (
                        MainGroup.Sport.Zaradka.Five.task3, MainGroup.Sport.Zaradka.Five.task3_help,
                        MainGroup.Sport.Zaradka.Five.task3_do):
                    if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                        resp.update({
                            'response': {
                                'text': '–í—Å—Ç–∞–Ω—å—Ç–µ –ø—Ä—è–º–æ –∏ –≤—ã—Ç—è–Ω–∏—Ç–µ —Ä—É–∫–∏ –ø–æ —Å—Ç–æ—Ä–æ–Ω–∞–º. –¢–µ–ª–æ –æ–±—Ä–∞–∑—É–µ—Ç –±—É–∫–≤—É ¬´–¢¬ª. –í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∫—Ä—É–≥–æ–≤—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è –ø—Ä—è–º—ã–º–∏ —Ä—É–∫–∞–º–∏ –≤–ø–µ—Ä—ë–¥, –∑–∞—Ç–µ–º ‚Äì –Ω–∞–∑–∞–¥.',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Five.task3_help)
                    elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                        resp.update({
                            'response': {
                                'text': f'{random.choice(motivations)}',
                                'tts': f'{random.choice(tracks_sixteen)}',
                                'buttons': [
                                    {
                                        'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                        'hide': True
                                    }
                                ]
                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Five.task3_do)
                    elif state in (
                            MainGroup.Sport.Zaradka.Five.task3_do, MainGroup.Sport.Zaradka.Five.task3_help,
                            MainGroup.Sport.Zaradka.Five.task3) and (
                            '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                        resp.update({
                            'response': {
                                'text': '–ù–∞—Ä–∞—â–∏–≤–∞–µ–º –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å. –ù–µ –±–µ—Å–ø–æ–∫–æ–π—Ç–µ—Å—å, –¥–µ–ª–∞–µ–º –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è.',
                                'card': {
                                    'type': 'BigImage',
                                    "image_id": '1540737/8c6ed8b8b2ea3d6c636d',
                                    "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 4',
                                    "description": '–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è'
                                }
                                ,
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Five.task4)
                    else:
                        resp.update({
                            'response': {
                                'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"'
                                ,
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                elif state in (
                        MainGroup.Sport.Zaradka.Five.task4, MainGroup.Sport.Zaradka.Five.task4_help,
                        MainGroup.Sport.Zaradka.Five.task4_do):
                    if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                        resp.update({
                            'response': {
                                'text': '–ß—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–µ, –Ω—É–∂–Ω–æ –¥–µ—Ä–∂–∞—Ç—å —Å–ø–∏–Ω—É –ø—Ä—è–º–æ. –ü–æ—Å–ª–µ —á–µ–≥–æ –Ω–∞—á–Ω–∏—Ç–µ –º–µ–¥–ª–µ–Ω–Ω–æ –æ–ø—É—Å–∫–∞—Ç—å –±–µ–¥—Ä–∞, –ø–æ–∫–∞ –æ–Ω–∏ –Ω–µ —Å—Ç–∞–Ω—É—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã –ø–æ–ª—É. ',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Five.task4_help)
                    elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                        resp.update({
                            'response': {
                                'text': f'{random.choice(motivations)}',
                                'tts': f'{random.choice(tracks_sixteen)}',
                                'buttons': [
                                    {
                                        'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                        'hide': True
                                    }
                                ]
                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Five.task4_do)
                    elif state in (
                            MainGroup.Sport.Zaradka.Five.task4_do, MainGroup.Sport.Zaradka.Five.task4_help,
                            MainGroup.Sport.Zaradka.Five.task4) and (
                            '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                        resp.update({
                            'response': {
                                'text': '–û–≥–æ, —É –≤–∞—Å —Ö–æ—Ä–æ—à–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –Ω–µ–æ–±—ã—á–Ω—ã–º –±–µ–≥–æ–º –Ω–∞ –º–µ—Å—Ç–µ.',
                                'card': {
                                    'type': 'BigImage',
                                    "image_id": '1030494/a858ba400c31046a469f',
                                    "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 5',
                                    "description": '–ë–µ–≥ –Ω–∞ –º–µ—Å—Ç–µ'
                                }
                                ,
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Five.task5)
                    else:
                        resp.update({
                            'response': {
                                'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"'
                                ,
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                elif state in (
                        MainGroup.Sport.Zaradka.Five.task5, MainGroup.Sport.Zaradka.Five.task5_help,
                        MainGroup.Sport.Zaradka.Five.task5_do):
                    if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                        resp.update({
                            'response': {
                                'text': '–ü–æ —Å—É—Ç–∏ —ç—Ç–æ —Ç–æ—Ç –∂–µ –±–µ–≥, –Ω–æ –±–µ–∑ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è. –°–ø–∏–Ω—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–µ—Ä–∂–∞—Ç—å –ø—Ä—è–º–æ –∏ —Ä–æ–≤–Ω–æ; —Ä—É–∫–∏ —Å–æ–≥–Ω—É—Ç—å –≤ –ª–æ–∫—Ç—è—Ö. –í–∞–∂–Ω–æ –Ω–µ –∑–∞–¥–∏—Ä–∞—Ç—å –∏ –Ω–µ —Ä–∞—Å—Å–ª–∞–±–ª—è—Ç—å –∏—Ö —Å–ª–∏—à–∫–æ–º —Å–∏–ª—å–Ω–æ.',
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Five.task5_help)
                    elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                        resp.update({
                            'response': {
                                'text': f'{random.choice(motivations)}',
                                'tts': f'{random.choice(tracks_sixteen)}',
                                'buttons': [
                                    {
                                        'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                        'hide': True
                                    }
                                ]
                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Five.task5_do)
                    elif state in (
                            MainGroup.Sport.Zaradka.Five.task5_do, MainGroup.Sport.Zaradka.Five.task5_help,
                            MainGroup.Sport.Zaradka.Five.task5) and (
                            '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                        resp.update({
                            'response': {
                                'text': '–í—ã —Ö–æ—Ä–æ—à–æ –ø–æ—Ç—Ä—É–¥–∏–ª–∏—Å—å, –≥–æ—Ä–∂—É—Å—å –í–∞–º–∏. –ß—Ç–æ –¥–µ–ª–∞–µ–º –¥–∞–ª—å—à–µ: –ø–æ–≤—Ç–æ—Ä–∏–º –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É? –í—ã–±–æ—Ä –∑–∞ –í–∞–º–∏.',
                                'card': {
                                    'type': 'ItemsList',
                                    'header': {
                                        'text': '–ü–æ–≤—Ç–æ—Ä–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –∏–ª–∏ –≤–µ—Ä–Ω—ë–º—Å—è –≤ –º–µ–Ω—é?'
                                    },
                                    'items': [
                                        {"title": '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É', "button": {"text": '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É'},
                                         "image_id": '997614/15f977696a281092bcc0'},
                                        {"title": '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é',
                                         "button": {"text": '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'},
                                         "image_id": '1030494/cc3631c8499cdc8daf8b'}

                                    ]
                                }

                            }
                        })
                        context.set_state(MainGroup.Sport.Zaradka.Five.final)
                    else:
                        resp.update({
                            'response': {
                                'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"'
                                ,
                                'buttons': [
                                    {
                                        'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                        'hide': True
                                    },
                                    {
                                        'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                        'hide': True
                                    }
                                ]

                            }
                        })

        elif state in MainGroup.Sport.Power:
            if state in (MainGroup.Sport.Power.start, MainGroup.Sport.Power.final):
                if '–¥—Ä—É–≥' in command or '–Ω–µ' in command or '–º–µ–Ω—é' in command or '–≤–µ—Ä–Ω' in command:
                    resp.update({
                        'response': {
                            'text': '–ß–µ–º –∑–∞–π–º—ë–º—Å—è –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑? –í—ã–±–∏—Ä–∞–π—Ç–µ: "–ö–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", "–°–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", "–£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞", "–í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å", –∏–ª–∏ "–ò–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å", "–§–∞–∑—ã —Å–Ω–∞".',
                            'card': {
                                'type': 'ItemsList',
                                'header': {
                                    'text': '–ß–µ–º –∑–∞–π–º—ë–º—Å—è –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑? #–ö–Ω–æ–ø–∫–∞ "–∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å" –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞#'
                                },
                                'items': [
                                    {"title": '–∫–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞', 'button': {"text": '–∫–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞'},
                                     "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...', "image_id": '1533899/13a130643a2fcdac537a'},
                                    {"title": '—Å–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞', "button": {"text": '—Å–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞'},
                                     "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...', "image_id": '1533899/f030bee0ec7edea516e3'},
                                    {"title": '—É—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞', "button": {"text": '—É—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞'},
                                     "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...', "image_id": '1540737/cc26a14712e6995a6624'},
                                    {"title": '–≤–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å', "button": {"text": '–≤–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å'},
                                     "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...', "image_id": '1540737/dc7c3c075dd3ecc22fc7'},
                                    {"title": '—Ñ–∞–∑—ã —Å–Ω–∞', "button": {"text": '—Ñ–∞–∑—ã —Å–Ω–∞'},
                                     "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...',
                                     "image_id": '213044/e81c096eeedd03ef9a2e'}

                                ]
                            }
                        }
                    })
                    context.set_state(MainGroup.Sport.state_home)
                elif '–¥–∞' in command or '–≥–æ—Ç–æ–≤' in command or '–ø–æ–≤—Ç–æ—Ä' in command or '–Ω–∞—á' in command or '–∑–∞–ø—É—Å' in command:
                    resp.update({
                        'response': {
                            'text': '–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º. –ü–µ—Ä–≤–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ - –æ—Ç–∂–∏–º–∞–Ω–∏—è. ',
                            'card': {
                                'type': 'BigImage',
                                "image_id": '937455/184ba7336b4638e1442e',
                                "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 1',
                                "description": '–û—Ç–∂–∏–º–∞–Ω–∏—è'
                            }
                            ,
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task1)
                else:
                    resp.update({
                        'response': {
                            'text': '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –ø–æ–Ω—è–ª–∞ –≤–∞—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ: –ú—ã –Ω–∞—á–∏–Ω–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é?'
                            ,
                            'buttons': [
                                {
                                    'title': '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é',
                                    'hide': True
                                },
                                {
                                    'title': '–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É',
                                    'hide': True
                                }
                            ]

                        }
                    })
            elif state in (
                    MainGroup.Sport.Power.task1, MainGroup.Sport.Power.task1_help, MainGroup.Sport.Power.task1_do) or (
                    state == MainGroup.Sport.Power.final and '–ø–æ–≤—Ç–æ—Ä' in command):
                if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                    resp.update({
                        'response': {
                            'text': '–ü—Ä–∏–º–∏—Ç–µ —É–ø–æ—Ä –ª–µ–∂–∞ –∏ –Ω–∞—á–∏–Ω–∞–π—Ç–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–≥–∏–±–∞–Ω–∏—è –∏ —Ä–∞–∑–≥–∏–±–∞–Ω–∏—è —Ä—É–∫. –°–ª–µ–¥–∏—Ç–µ –∑–∞ —Ç–µ–º, —á—Ç–æ–±—ã –ª–∏–Ω–∏—è –≤–∞—à–µ–≥–æ –∫–æ—Ä–ø—É—Å–∞ –æ—Å—Ç–∞–≤–∞–ª–∞—Å—å –ø—Ä—è–º–æ–π, –∏–∑–±–µ–≥–∞–π—Ç–µ –ø—Ä–æ–≥–∏–±–æ–≤ –≤ –æ–±–ª–∞—Å—Ç–∏ –≥—Ä—É–¥–∏ –∏ –ø–æ—è—Å–Ω–∏—Ü—ã.',
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task1_help)
                elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                    resp.update({
                        'response': {
                            'text': f'{random.choice(motivations)}',
                            'tts': f'{random.choice(tracks_fourteen)}',
                            'buttons': [
                                {
                                    'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                    'hide': True
                                }
                            ]
                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task1_do)
                elif state in (
                        MainGroup.Sport.Power.task1_do, MainGroup.Sport.Power.task1_help,
                        MainGroup.Sport.Power.task1) and (
                        '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                    resp.update({
                        'response': {
                            'text': '–£ –í–∞—Å –∑–¥–æ—Ä–æ–≤–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è! –°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ - –ø–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è.',
                            'card': {
                                'type': 'BigImage',
                                "image_id": '213044/18bfa946ccc5da2c8e45',
                                "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 2',
                                "description": '–ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è'
                            }
                            ,
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task2)
                else:
                    resp.update({
                        'response': {
                            'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"'
                            ,
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
            elif state in (
                    MainGroup.Sport.Power.task2, MainGroup.Sport.Power.task2_help, MainGroup.Sport.Power.task2_do) or (
                    state == MainGroup.Sport.Power.final and '–ø–æ–≤—Ç–æ—Ä' in command):
                if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                    resp.update({
                        'response': {
                            'text': '–ü–æ–≤–∏—Å–Ω–∏—Ç–µ –Ω–∞ —Ç—É—Ä–Ω–∏–∫–µ –∏ —Å–¥–µ–ª–∞–π—Ç–µ —Ç—è–≥–æ–≤–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –≤–≤–µ—Ä—Ö, –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å —ç—Ç–∏–º –¥–µ–ª–∞—è –≤—ã–¥–æ—Ö. –î–≤–∏–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è –∑–∞ —Å—á–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è –ª–æ–ø–∞—Ç–æ–∫.'
                                    ' –ù–µ –Ω–∞–¥–æ —Å—Ç–∞—Ä–∞—Ç—å—Å—è —Ç—è–Ω—É—Ç—å —Å–µ–±—è –≤–≤–µ—Ä—Ö —Å–∏–ª–æ–π –±–∏—Ü–µ–ø—Å–æ–≤, —Ç–∞–∫ –∫–∞–∫ —à–∏—Ä–æ—á–∞–π—à–∏–µ –º—ã—à—Ü—ã —Å–ø–∏–Ω—ã ‚Äì –∫—É–¥–∞ –±–æ–ª–µ–µ —Å–∏–ª—å–Ω–∞—è –º—ã—à–µ—á–Ω–∞—è –≥—Ä—É–ø–ø–∞.',
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task2_help)
                elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                    resp.update({
                        'response': {
                            'text': f'{random.choice(motivations)}',
                            'tts': f'{random.choice(tracks_fourteen)}',
                            'buttons': [
                                {
                                    'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                    'hide': True
                                }
                            ]
                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task2_do)
                elif state in (
                        MainGroup.Sport.Power.task2_do, MainGroup.Sport.Power.task2_help,
                        MainGroup.Sport.Power.task2) and (
                        '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                    resp.update({
                        'response': {
                            'text': '–ù–∞–¥–µ—é—Å—å –í—ã –≥–æ—Ç–æ–≤—ã, –ø–æ—Ç–æ–º—É —á—Ç–æ –º—ã –Ω–∞—á–∏–Ω–∞–µ–º –Ω–∞—Ä–∞—â–∏–≤–∞—Ç—å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å. –ü—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ –æ—Ç–∂–∏–º–∞–Ω–∏—è–º –æ–±—Ä–∞—Ç–Ω—ã–º —Ö–≤–∞—Ç–æ–º.',
                            'card': {
                                'type': 'BigImage',
                                "image_id": '213044/e3204402f44ed1603aeb',
                                "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 3',
                                "description": '–û—Ç–∂–∏–º–∞–Ω–∏—è –æ–±—Ä–∞—Ç–Ω—ã–º —Ö–≤–∞—Ç–æ–º'
                            }
                            ,
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task3)
                else:
                    resp.update({
                        'response': {
                            'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"'
                            ,
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
            elif state in (
                    MainGroup.Sport.Power.task3, MainGroup.Sport.Power.task3_help, MainGroup.Sport.Power.task3_do) or (
                    state == MainGroup.Sport.Power.final and '–ø–æ–≤—Ç–æ—Ä' in command):
                if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                    resp.update({
                        'response': {
                            'text': '–°–∞–¥–∏–º—Å—è –Ω–∞ –≤–æ–∑–≤—ã—à–µ–Ω–Ω–æ—Å—Ç—å (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç—É–ª), —É–ø–∏—Ä–∞–µ–º—Å—è –ª–∞–¥–æ–Ω—è–º–∏ —Ç–∞–∫, —á—Ç–æ–±—ã —Ä—É–∫–∏ –±—ã–ª–∏ –Ω–∞ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ –æ—Ç –ª–∏–Ω–∏–∏ –ø–æ–∑–≤–æ–Ω–æ—á–Ω–∏–∫–∞. '
                                    '–°–≥–∏–±–∞–µ–º —Ä—É–∫–∏ –≤ –ª–æ–∫—Ç–µ–≤—ã—Ö –∏ –ø–ª–µ—á–µ–≤—ã—Ö —Å—É—Å—Ç–∞–≤–∞—Ö –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ, –æ–ø—É—Å–∫–∞–µ–º—Å—è —Ç–∞–∑–æ–º –≤–Ω–∏–∑ –¥–æ —É—Ä–æ–≤–Ω—è, –∫–æ–≥–¥–∞ –ø—Ä–µ–¥–ø–ª–µ—á—å—è —Å—Ç–∞–Ω—É—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–º–∏ –ø–æ–ª—É. –° –≤—ã–¥–æ—Ö–æ–º —Ä–∞–∑–≥–∏–±–∞–µ–º —Ä—É–∫–∏.',
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task3_help)
                elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                    resp.update({
                        'response': {
                            'text': f'{random.choice(motivations)}',
                            'tts': f'{random.choice(tracks_fourteen)}',
                            'buttons': [
                                {
                                    'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                    'hide': True
                                }
                            ]
                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task3_do)
                elif state in (
                        MainGroup.Sport.Power.task3_do, MainGroup.Sport.Power.task3_help,
                        MainGroup.Sport.Power.task3) and (
                        '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                    resp.update({
                        'response': {
                            'text': '–í—ã - –Ω–∞—Å—Ç–æ—è—â–∏–π —Å–ø–æ—Ä—Ç—Å–º–µ–Ω! –ü—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ –ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è–º.',
                            'card': {
                                'type': 'BigImage',
                                "image_id": '1656841/46115bb0d16cbb24a76b',
                                "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 4',
                                "description": '–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è'
                            }
                            ,
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task4)
                else:
                    resp.update({
                        'response': {
                            'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"'
                            ,
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
            elif state in (
                    MainGroup.Sport.Power.task4, MainGroup.Sport.Power.task4_help, MainGroup.Sport.Power.task4_do) or (
                    state == MainGroup.Sport.Power.final and '–ø–æ–≤—Ç–æ—Ä' in command):
                if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                    resp.update({
                        'response': {
                            'text': '–í—Å—Ç–∞–Ω—å—Ç–µ –ø—Ä—è–º–æ, –Ω–æ–≥–∏ –Ω–∞ —à–∏—Ä–∏–Ω–µ –ø–ª–µ—á, –Ω–æ—Å–∫–∏ —Å—Ç–æ–ø —Å–ª–µ–≥–∞ —Ä–∞–∑–≤–µ–¥–∏—Ç–µ –≤ —Å—Ç–æ—Ä–æ–Ω—ã. –ù–∞–ø—Ä—è–≥–∏—Ç–µ –ø–æ—è—Å–Ω–∏—Ü—É, '
                                    '–æ—Ç–≤–µ–¥–∏—Ç–µ —Ç–∞–∑ –Ω–∞–∑–∞–¥ –∏ –Ω–µ–º–Ω–æ–≥–æ –Ω–∞–∫–ª–æ–Ω–∏—Ç–µ —Ç–æ—Ä—Å –≤–ø–µ—Ä–µ–¥, —Å–æ–≥–Ω–∏—Ç–µ –Ω–æ–≥–∏ –≤ –∫–æ–ª–µ–Ω—è—Ö –∏ –æ–ø—É—Å—Ç–∏—Ç–µ—Å—å –∫–∞–∫ –º–æ–∂–Ω–æ –Ω–∏–∂–µ. –ó–∞—Ç–µ–º –ø–æ–¥–Ω–∏–º–∏—Ç–µ—Å—å –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ.',
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task4_help)
                elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                    resp.update({
                        'response': {
                            'text': f'{random.choice(motivations)}',
                            'tts': f'{random.choice(tracks_fourteen)}',
                            'buttons': [
                                {
                                    'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                    'hide': True
                                }
                            ]
                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task4_do)
                elif state in (
                        MainGroup.Sport.Power.task4_do, MainGroup.Sport.Power.task4_help,
                        MainGroup.Sport.Power.task4) and (
                        '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                    resp.update({
                        'response': {
                            'text': '–ü–æ–¥–Ω–∞–∂–º–∏—Ç–µ, –æ—Å—Ç–∞–ª–æ—Å—å –Ω–µ —Ç–∞–∫ –º–Ω–æ–≥–æ! –°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ - –ø–æ–¥–Ω–∏–º–∞–Ω–∏—è –Ω–∞ –Ω–æ—Å–∫–µ.',
                            'card': {
                                'type': 'BigImage',
                                "image_id": '1030494/ac5faee74949ee038bad',
                                "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 5',
                                "description": '–ü–æ–¥–Ω–∏–º–∞–Ω–∏—è –Ω–∞ –Ω–æ—Å–∫–µ'
                            }
                            ,
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task5)
                else:
                    resp.update({
                        'response': {
                            'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"'
                            ,
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
            elif state in (
                    MainGroup.Sport.Power.task5, MainGroup.Sport.Power.task5_help, MainGroup.Sport.Power.task5_do) or (
                    state == MainGroup.Sport.Power.final and '–ø–æ–≤—Ç–æ—Ä' in command):
                if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                    resp.update({
                        'response': {
                            'text': '–í—Å—Ç–∞–Ω—å—Ç–µ –ø—Ä—è–º–æ –∏ –Ω–∞—á–∏–Ω–∞–π—Ç–µ –ø–æ–¥–Ω–∏–º–∞—Ç—å—Å—è –Ω–∞ –Ω–æ—Å–∫–∏ –∏ –≤–Ω–æ–≤—å –æ–ø—É—Å–∫–∞—Ç—å—Å—è –Ω–∞ –≤—Å—é —Å—Ç–æ–ø—É. –í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –æ–ø–æ—Ä–æ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç–µ–Ω–∫–æ–π, –µ—Å–ª–∏ –í–∞–º —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ.',
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task5_help)
                elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                    resp.update({
                        'response': {
                            'text': f'{random.choice(motivations)}',
                            'tts': f'{random.choice(tracks_fourteen)}',
                            'buttons': [
                                {
                                    'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                    'hide': True
                                }
                            ]
                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task5_do)
                elif state in (
                        MainGroup.Sport.Power.task5_do, MainGroup.Sport.Power.task5_help,
                        MainGroup.Sport.Power.task5) and (
                        '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                    resp.update({
                        'response': {
                            'text': '–°–ª–µ–¥—É—é—â–µ–µ —ç–Ω–µ—Ä–≥–∏—á–Ω–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ - –≤–µ–ª–æ—Å–∏–ø–µ–¥.',
                            'card': {
                                'type': 'BigImage',
                                "image_id": '997614/1ef3a8d9152694fe40e3',
                                "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 6',
                                "description": '–í–µ–ª–æ—Å–∏–ø–µ–¥'
                            }
                            ,
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task6)
                else:
                    resp.update({
                        'response': {
                            'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"'
                            ,
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
            elif state in (
                    MainGroup.Sport.Power.task6, MainGroup.Sport.Power.task6_help, MainGroup.Sport.Power.task6_do) or (
                    state == MainGroup.Sport.Power.final and '–ø–æ–≤—Ç–æ—Ä' in command):
                if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                    resp.update({
                        'response': {
                            'text': '–õ—è–≥—Ç–µ –Ω–∞ —Å–ø–∏–Ω—É, —É–±–µ—Ä–∏—Ç–µ —Ä—É–∫–∏ –∑–∞ –≥–æ–ª–æ–≤—É –∏ —Ä–∞–∑–≤–µ–¥–∏—Ç–µ –ª–æ–∫—Ç–∏ –≤ —Å—Ç–æ—Ä–æ–Ω—ã. –ü–æ–æ—á–µ—Ä—ë–¥–Ω–æ —Å–≥–∏–±–∞–π—Ç–µ –∏ –≤—ã–ø—Ä—è–º–ª—è–π—Ç–µ –Ω–æ–≥–∏, '
                                    '–∫–∞–∫ –±—É–¥—Ç–æ –∫—Ä—É—Ç–∏—Ç–µ –ø–µ–¥–∞–ª–∏ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞, –≤ —ç—Ç–æ –≤—Ä–µ–º—è –ª–æ–∫—Ç—è–º–∏ –∫–∞—Å–∞–π—Ç–µ—Å—å –∫–æ–ª–µ–Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–π –Ω–æ–≥–∏.',
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task6_help)
                elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                    resp.update({
                        'response': {
                            'text': f'{random.choice(motivations)}',
                            'tts': f'{random.choice(tracks_fourteen)}',
                            'buttons': [
                                {
                                    'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                    'hide': True
                                }
                            ]
                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task6_do)
                elif state in (
                        MainGroup.Sport.Power.task6_do, MainGroup.Sport.Power.task6_help,
                        MainGroup.Sport.Power.task6) and (
                        '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                    resp.update({
                        'response': {
                            'text': '–í—ã—Ö–æ–¥–∏–º –Ω–∞ —Ñ–∏–Ω–∏—à–Ω—É—é –ø—Ä—è–º—É—é! –ó–∞–≤–µ—Ä—à–∞—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ - —Å–≥–∏–±–∞–Ω–∏—é —Ä—É–∫ —Å –≥—Ä—É–∑–æ–º.',
                            'card': {
                                'type': 'BigImage',
                                "image_id": '213044/a225c7950958cf314e50',
                                "title": '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 7',
                                "description": '–°–≥–∏–±–∞–Ω–∏–µ —Ä—É–∫ —Å –≥—Ä—É–∑–æ–º'
                            }
                            ,
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task7)
                else:
                    resp.update({
                        'response': {
                            'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"'
                            ,
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
            elif state in (
                    MainGroup.Sport.Power.task7, MainGroup.Sport.Power.task7_help, MainGroup.Sport.Power.task7_do) or (
                    state == MainGroup.Sport.Power.final and '–ø–æ–≤—Ç–æ—Ä' in command):
                if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                    resp.update({
                        'response': {
                            'text': '–ü—Ä–∏–º–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ. –í–æ–∑—å–º–∏—Ç–µ –ª—é–±–æ–π –≥—Ä—É–∑, —É–¥–æ–±–Ω–æ –ª–µ–∂–∞—â–∏–π –≤ —Ä—É–∫–µ, –∏ –Ω–∞—á–∏–Ω–∞–π—Ç–µ —Å–≥–∏–±–∞–Ω–∏–µ —Ä—É–∫–∏.',
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task7_help)
                elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                    resp.update({
                        'response': {
                            'text': f'{random.choice(motivations)}',
                            'tts': f'{random.choice(tracks_fourteen)}',
                            'buttons': [
                                {
                                    'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                    'hide': True
                                }
                            ]
                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task7_do)
                elif state in (
                        MainGroup.Sport.Power.task7_do, MainGroup.Sport.Power.task7_help,
                        MainGroup.Sport.Power.task7) and (
                        '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command):
                    resp.update({
                        'response': {
                            'text': '–û—Ç–ª–∏—á–Ω–æ, –í—ã –∑–¥–æ—Ä–æ–≤–æ —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å —Å–æ –≤—Å–µ–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏. –û—Ç–¥–æ—Ö–Ω–∏—Ç–µ –∏ –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –¥—É—Ö. ',
                            'card': {
                                'type': 'BigImage',
                                "image_id": '997614/d843aa7bd19d82dfddbc',
                                "title": '–û—Ç–¥—ã—Ö',
                                "description": '–û—Ç–¥–æ—Ö–Ω–∏—Ç–µ –∏ –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –¥—É—Ö. '
                            }
                            ,
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task8)
                else:
                    resp.update({
                        'response': {
                            'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"'
                            ,
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
            elif state in (
                    MainGroup.Sport.Power.task8, MainGroup.Sport.Power.task8_help, MainGroup.Sport.Power.task8_do) or (
                    state == MainGroup.Sport.Power.final and '–ø–æ–≤—Ç–æ—Ä' in command):
                if '–ø–æ–¥—Ä–æ–±–Ω' in command or '–æ–±—ä—è—Å' in command:
                    resp.update({
                        'response': {
                            'text': '–ü—Ä–æ—Å—Ç–æ –æ—Ç–¥–æ—Ö–Ω–∏—Ç–µ. –í —ç—Ç–æ–º –Ω–µ—Ç –Ω–∏—á–µ–≥–æ —Å–ª–æ–∂–Ω–æ–≥–æüòÅ',
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task8_help)
                elif '–≤—ã–ø–æ–ª–Ω' in command or '–¥–µ–ª' in command:
                    resp.update({
                        'response': {
                            'text': f'{random.choice(motivations)}',
                            'tts': f'{random.choice(tracks_fourteen)}',
                            'buttons': [
                                {
                                    'title': '–°–ª–µ–¥—É—é—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ‚ñ∂',
                                    'hide': True
                                }
                            ]
                        }
                    })
                    context.set_state(MainGroup.Sport.Power.task8_do)
                elif (state in (
                        MainGroup.Sport.Power.task8_do, MainGroup.Sport.Power.task8_help,
                        MainGroup.Sport.Power.task8) and (
                              '–ø—Ä–æ–ø' in command or '—Å–ª–µ–¥' in command or '–ø—Ä–æ–¥' in command or '–¥–∞–ª' in command)) or \
                        state == MainGroup.Sport.Power.end:
                    answer_options = [
                        '–ó–∞–º–∏–Ω–∫–∞ –Ω—É–∂–Ω–∞, —á—Ç–æ–±—ã —Å–Ω–∏–∑–∏—Ç—å –¥–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è —á–∞—Å—Ç–æ—Ç—É —Å–µ—Ä–¥–µ—á–Ω—ã—Ö —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π. –•–æ—Ç–∏—Ç–µ –µ—ë –≤—ã–ø–æ–Ω–∏—Ç—å?',
                        '–ë—É–¥–µ—Ç –∑–¥–æ—Ä–æ–≤–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–º–∏–Ω–∫—É! –ó–∞–º–∏–Ω–∫–∞ —Å–Ω–∏–∂–∞–µ—Ç —Å–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ –∑–∞–∫—Ä–µ–ø–æ—â–µ–Ω–∏—é –º—ã—à—Ü –ø–æ—Å–ª–µ –Ω–∞–≥—Ä—É–∑–∫–∏.  –•–æ—Ç–µ–ª–∏ –±—ã –í—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –µ—ë –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é?']
                    resp.update({
                        'response': {
                            'text': f'{random.choice(answer_options)}',
                            'card': {
                                'type': 'ItemsList',
                                'header': {
                                    'text': '–•–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–º–∏–Ω–∫—É?'
                                },
                                'items': [
                                    {"title": '–í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–º–∏–Ω–∫—É', "button": {"text": '–î–∞'},
                                     "image_id": '213044/9c13b9b997d78cde2579'},
                                    {"title": '–ó–∞–≤–µ—Ä—à–∏—Ç—å –±–µ–∑ –∑–∞–º–∏–Ω–∫–∏', "button": {"text": '–ù–µ—Ç'},
                                     "image_id": '1540737/cc47e154fc7c83b6ba0d'}

                                ]
                            }

                        }
                    })
                    context.set_state(MainGroup.Sport.Wrap.WarmDown.qw)
                    context.update_data(callback=finish_power_training)
                else:
                    resp.update({
                        'response': {
                            'text': '–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –æ —á—ë–º –≤—ã. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"–í—ã–ø–æ–ª–Ω–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏"',
                            'buttons': [
                                {
                                    'title': '–í—ã–ø–æ–ª–Ω–∏—Ç—åüî•',
                                    'hide': True
                                },
                                {
                                    'title': '–ø–æ–¥—Ä–æ–±–Ω–µ–µüìÑ',
                                    'hide': True
                                },
                                {
                                    'title': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠',
                                    'hide': True
                                }
                            ]

                        }
                    })
            elif state == MainGroup.Sport.Power.final:
                answer_options = [
                    '–î–∞–≤–∞–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏–º –∑–∞–º–∏–Ω–∫—É! –û–Ω–∞ –Ω—É–∂–Ω–∞, —á—Ç–æ–±—ã –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–∞—Å—Ç–æ—Ç—É —Å–µ—Ä–¥–µ—á–Ω—ã—Ö —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π –∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É —Ç–µ–ª–∞. –•–æ—Ç–∏—Ç–µ —Å–Ω—è—Ç—å –º—ã—à–µ—á–Ω–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏?',
                    '–ë—É–¥–µ—Ç –∑–¥–æ—Ä–æ–≤–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–º–∏–Ω–∫—É! –û–Ω–∞ –ø–æ–º–æ–≥–∞–µ—Ç —Å–Ω–∏–∑–∏—Ç—å —Å–∏–Ω–¥—Ä–æ–º –æ—Ç—Å—Ä–æ—á–µ–Ω–Ω–æ–≥–æ –Ω–∞—á–∞–ª–∞ –º—ã—à–µ—á–Ω–æ–π –±–æ–ª–µ–∑–Ω–µ–Ω–Ω–æ—Å—Ç–∏. –•–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç–æ—Ç —Ä—è–¥ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π?']
                resp.update({
                    'response': {
                        'text': f'{random.choice(answer_options)}',
                        'card': {
                            'type': 'ItemsList',
                            'header': {
                                'text': '–•–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–º–∏–Ω–∫—É?'
                            },
                            'items': [
                                {"title": '–í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–º–∏–Ω–∫—É', "button": {"text": '–î–∞'},
                                 "image_id": '213044/9c13b9b997d78cde2579'},
                                {"title": '–ó–∞–≤–µ—Ä—à–∏—Ç—å –±–µ–∑ –∑–∞–º–∏–Ω–∫–∏', "button": {"text": '–ù–µ—Ç'},
                                 "image_id": '1540737/cc47e154fc7c83b6ba0d'}

                            ]
                        }

                    }
                })

                context.set_state(MainGroup.Sport.Power.end)

        elif state in MainGroup.Sport.Wrap.WarmUp:
            step: TrainingStep = warm_up_algorithm[context.get_data().get('step', 0)]

            if state == MainGroup.Sport.Wrap.WarmUp.qw:
                if '–Ω–µ—Ç' in command or '–Ω–µ ' in command:
                    resp = cancel_warmup(context, resp)
                elif '–¥–∞' in command or '–∫–æ–Ω–µ—á–Ω' in command:
                    resp = start_warmup(context, resp)
                else:
                    resp.update({
                        'response': {
                            'text': '–ò–∑–≤–∏–Ω–∏—Ç–µ, –∫–∞–∂–µ—Ç—Å—è —è –ø—Ä–æ—Å–ª—É—à–∞–ª–∞üò£\n–í—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞–∑–º–∏–Ω–∫—É?',
                            'buttons': [
                                {
                                    'title': '–î–∞',
                                    'hide': True
                                },
                                {
                                    'title': '–ù–µ—Ç',
                                    'hide': True
                                }
                            ]

                        }
                    })

            elif state == MainGroup.Sport.Wrap.WarmUp.start and is_positive(command):
                context.set_state(MainGroup.Sport.Wrap.WarmUp.task)
                step: int = 0
                context.update_data(step=step)

                step: TrainingStep = warm_up_algorithm[step]

                resp.update(step.generate_choice_resp())

            elif '–ø–æ–¥—Ä–æ–±–Ω' in command or '—Ä–∞—Å—Å–∫–∞–∂–∏' in command:
                resp.update(step.generate_detailed_description_resp())

            elif is_positive(command):
                resp = step.generate_do_training_resp(random.choice(motivations), random.choice(tracks_fourteen))

            elif state == MainGroup.Sport.Wrap.WarmUp.end:
                if '–ø–æ–≤—Ç–æ—Ä' in command or '–µ—â—ë' in command or '–µ—â–µ' in command or '—Å–Ω–æ–≤' in command:
                    resp = start_warmup(context, resp)
                else:
                    cancel_warmup(context, resp)

            elif '–ø—Ä–æ–ø—É—Å—Ç' in command or '—Å–ª–µ–¥—É—é—â' in command or '–¥–∞–ª—å—à' in command or '–ø—Ä–æ–¥–æ–ª–∂' in command:
                if state == MainGroup.Sport.Wrap.WarmUp.task:
                    step = context.get_data().get('step', 0) + 1
                    context.update_data(step=step)

                    try:
                        step: TrainingStep = warm_up_algorithm[step]
                    except IndexError:
                        end_warmup(context, resp)
                    else:
                        resp.update(step.generate_choice_resp())

                elif state == MainGroup.Sport.Wrap.WarmUp.start:
                    cancel_warmup(context, resp)

            else:
                end_warmup(context, resp)

        elif state in MainGroup.Sport.Wrap.WarmDown:
            step: TrainingStep = warm_down_algorithm[context.get_data().get('step', 0)]

            if state == MainGroup.Sport.Wrap.WarmDown.qw:
                if '–Ω–µ—Ç' in command or '–Ω–µ ' in command:
                    resp = cancel_warmdown(context, resp)
                elif '–¥–∞' in command or '–∫–æ–Ω–µ—á–Ω' in command:
                    resp = start_warmdown(context, resp)
                else:
                    resp.update({
                        'response': {
                            'text': '–ò–∑–≤–∏–Ω–∏—Ç–µ, –∫–∞–∂–µ—Ç—Å—è —è –ø—Ä–æ—Å–ª—É—à–∞–ª–∞üò£\n–í—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞–∑–º–∏–Ω–∫—É?',
                            'buttons': [
                                {
                                    'title': '–î–∞',
                                    'hide': True
                                },
                                {
                                    'title': '–ù–µ—Ç',
                                    'hide': True
                                }
                            ]

                        }
                    })

            elif state == MainGroup.Sport.Wrap.WarmDown.start and is_positive(command):
                context.set_state(MainGroup.Sport.Wrap.WarmDown.task)
                step: int = 0
                context.update_data(step=step)

                step: TrainingStep = warm_down_algorithm[step]

                resp.update(step.generate_choice_resp())

            elif '–ø–æ–¥—Ä–æ–±–Ω' in command or '—Ä–∞—Å—Å–∫–∞–∂–∏' in command:
                resp.update(step.generate_detailed_description_resp())

            elif is_positive(command):
                resp.update(step.generate_do_training_resp(random.choice(motivations), random.choice(tracks_fourteen)))

            elif state == MainGroup.Sport.Wrap.WarmDown.end:
                if '–ø–æ–≤—Ç–æ—Ä' in command or '–µ—â—ë' in command or '–µ—â–µ' in command or '—Å–Ω–æ–≤' in command:
                    resp = start_warmdown(context, resp)
                else:
                    cancel_warmdown(context, resp)

            elif '–ø—Ä–æ–ø—É—Å—Ç' in command or '—Å–ª–µ–¥—É—é—â' in command or '–¥–∞–ª—å—à' in command or '–ø—Ä–æ–¥–æ–ª–∂' in command:
                if state == MainGroup.Sport.Wrap.WarmDown.task:
                    step = context.get_data().get('step', 0) + 1
                    context.update_data(step=step)

                    try:
                        step: TrainingStep = warm_down_algorithm[step]
                    except IndexError:
                        end_warmdown(context, resp)
                    else:
                        resp.update(step.generate_choice_resp())

                elif state == MainGroup.Sport.Wrap.WarmDown.start:
                    cancel_warmdown(context, resp)

            else:
                end_warmdown(context, resp)

    else:
        resp.update({
            'response': {
                'text': f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –°–∫–∞–∂–∏—Ç–µ "–ø–æ–µ—Ö–∞–ª–∏" —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.'
            }
        })
        context.set_state(MainGroup.state_1)

    if resp.get('response', None) is None:
        resp['response'] = {
            'text': f'–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª–∞ –≤–∞—Å. {state.help_message.format(now=random.choice(NOW_SYNONIMS))}'}
    response = resp['response']
    if not (buttons := response.get('buttons', [])):
        response['buttons'] = buttons

    for button in buttons:
        if button.get('title', '').lower() == '–ø–æ–º–æ—â—å':
            break
    else:
        buttons.append({'title': '–ü–æ–º–æ—â—å', 'hide': False})
    context.update_data(last_buttons=buttons)

    return dict_to_json(resp, ensure_ascii=False, indent=2)


def main():
    app.run('localhost', port=5050, debug=True)


if __name__ == '__main__':
    main()
