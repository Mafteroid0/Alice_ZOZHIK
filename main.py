import json
import random as rn

from flask import Flask, request

from fsm import StatesGroup, State, FSM

app = Flask(__name__)

fsm = FSM()


class MainGroup(StatesGroup):  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —ç—Ç–æ None, –µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ —è–≤–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å
    _fsm = fsm
    state_1 = State()

    class SportBranch(StatesGroup):
        state_home = State()

        class Water(StatesGroup):
            state_1 = State()

        class Dream(StatesGroup):
            state_1 = State()

        class Power(StatesGroup):
            state_1 = State()

        class Cardio(StatesGroup):
            state_1 = State()

        class Zaradka(StatesGroup):
            state_1 = State()


# –®–∞–±–ª–æ–Ω –¥–ª—è —É—Å–ª–æ–≤–∏–π:  if fsm.get_state(user_id) == MyStates.state_1
# –î–∏–∞–≥—Ä–∞–º–º–∞: https://miro.com/app/board/uXjVMdrXZW0=/

@app.route('/alice', methods=['POST'])
def main():
    end = False

    req = json.loads(request.data)
    user_id = req['session']['user']['user_id']  # TODO: —Ç—É—Ç –≤–ø–∏—à–∏ –ø—É—Ç—å –¥–æ –∞–π–¥–∏ —é–∑–µ—Ä–∞
    print(fsm.get_state(user_id))
    if req['session']['new']:
        # –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏
        res = {
            'version': req['version'],
            'session': req['session'],
            'response': {
                'text': '–ü—Ä–∏–≤–µ—Çüñê!  –í—Å–µ–≥–¥–∞ —Ö–æ—Ç–µ–ª–∏ –æ–∫—É–Ω—É—Ç—å—Å—è –≤ –º–∏—Ä –∑–¥–æ—Ä–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏? '
                        '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –í—ã —Å–¥–µ–ª–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä.'
                        '–Ø –Ω–∞–≤—ã–∫ ... –ø–æ–º–æ–≥—É –æ—Å–≤–æ–∏—Ç—å –æ—Å–Ω–æ–≤—ã –ó–û–ñ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ —Å –ª—ë–≥–∫–æ—Å—Ç—å—é –∏ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º.'
                        '–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–æ–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º, —Ç–æ —Å–∫–∞–∂–∏—Ç–µ "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?". –ï—Å–ª–∏ –∂–µ –≥–æ—Ç–æ–≤—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å, —Ç–æ —Å–∫–∞–∂–∏—Ç–µ "–ü–æ–µ—Ö–∞–ª–∏".',
                'buttons': [
                    {
                        'title': '–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?',
                        'hide': True
                    },
                    {
                        "title": "–ü–æ–µ—Ö–∞–ª–∏",
                        "hide": True
                    }
                ]
            }
        }
        fsm.reset_state(user_id)
        return json.dumps(res, ensure_ascii=False, indent=2)
    else:
        res = []  # TODO: –ü–æ—Ç–æ–º –∑–∞–º–µ–Ω–∏–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        if fsm.get_state(user_id) == None and (req['request']['command'] == '—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å'):
            answer_options = ['–û—á–µ–Ω—å –∑–¥–æ—Ä–æ–≤–æ, —á—Ç–æ –≤—ã —Å–ø—Ä–æ—Å–∏–ª–∏ –º–µ–Ω—è –ø—Ä–æ —ç—Ç–æ. –í –º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤—Ö–æ–¥–∏—Ç:\n'
                              'üßò‚Äç‚ôÇÔ∏è –£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞\n'
                              'üèÉ‚Äç‚ôÇÔ∏è –ö–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞\n'
                              'üèãÔ∏è‚Äç‚ôÄÔ∏è –°–∏–ª–æ–≤–∞—è —Ñ—É–ª–ª–±–∞–¥–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞\n'
                              'üò¥ –§–∞–∑—ã —Å–Ω–∞\n'
                              'ü•õ –í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å\n'
                              '–ö –∫–∞–∂–¥–æ–º—É —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—é –µ—Å—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∏ GIF, –Ω–∞–≥–ª—è–¥–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ. –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ø–∏—Å–∫—É, —Å–∫–∞–∂–∏—Ç–µ –ü–æ–µ—Ö–∞–ª–∏.',

                              '–Ø —Ä–∞–¥–∞, —á—Ç–æ –≤—ã —Ä–µ—à–∏–ª–∏ —Å–ø—Ä–æ—Å–∏—Ç—å –º–µ–Ω—è –æ–± —ç—Ç–æ–º. –ï—Å–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç—å –≤–∫—Ä–∞—Ç—Ü–µ, —Ç–æ –≤ –º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤—Ö–æ–¥–∏—Ç:\n'
                              'üßò‚Äç‚ôÇÔ∏è –£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞\n'
                              'üèÉ‚Äç‚ôÇÔ∏è –ö–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞\n'
                              'üèãÔ∏è‚Äç‚ôÄÔ∏è –°–∏–ª–æ–≤–∞—è —Ñ—É–ª–ª–±–∞–¥–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞\n'
                              'üò¥ –§–∞–∑—ã —Å–Ω–∞\n'
                              'ü•õ –í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å\n'
                              '–ö –∫–∞–∂–¥–æ–º—É –∏–∑ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ GIF, –Ω–∞–≥–ª—è–¥–Ω–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â–∏–π , –∫–∞–∫ –≤—ã–ø–æ–ª–Ω—è—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ. –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ø–∏—Å–∫—É, —Å–∫–∞–∂–∏—Ç–µ "–ü–æ–µ—Ö–∞–ª–∏".']

            res = {
                'version': req['version'],
                'session': req['session'],
                'response': {
                    'text': f'{answer_options[rn.randint(0, 1)]} \n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–∫–∞–∂–∏—Ç–µ "–ø–æ–µ—Ö–∞–ª–∏!"',
                    'buttons': [
                        {
                            'title': '–ü–æ–µ—Ö–∞–ª–∏!',
                            'hide': True
                        }
                    ]

                }
            }
            fsm.set_state(user_id, MainGroup.state_1)
            return json.dumps(res, ensure_ascii=False, indent=2)

        if fsm.get_state(user_id) == MainGroup.state_1 and req['request'][
            'command'] == '–ø–æ–µ—Ö–∞–ª–∏':  # TODO: –î–æ–±–∞–≤–∏—Ç—å –≤ —É—Å–ª–æ–≤–∏—è –Ω–æ–º–µ—Ä–∞ —Å—Ç–µ–π—Ç–æ–≤, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ —Å—é–¥–∞ –ø–æ–ø–∞—Å—Ç—å (—Å–º. –¥–∏–∞–≥—Ä–∞–º–º—É)
            answer_options = ['–í–∞—É, –í—ã —É–∂–µ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —à–∞–≥–∞—Ö –æ—Ç –ó–û–ñ–∞ üòç, '
                              '–æ—á–µ–Ω—å —Ä–∞–¥–∞ –∑–∞ –í–∞—Å. –î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ, —á–µ–º —Ö–æ—Ç–∏—Ç–µ –∑–∞–Ω—è—Ç—å—Å—è'
                              ' –∏–ª–∏ —á—Ç–æ –í–∞–º –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å:\n'
                              '"–ó–∞—Ä—è–¥–∫–∞", "–ö–∞—Ä–¥–∏–æ", "–°–∏–ª–æ–≤–∞—è", "–§–∞–∑—ã —Å–Ω–∞" –∏–ª–∏ "–í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å".',

                              '–í—ã —É–∂–µ —Å–æ–≤—Å–µ–º-—Å–æ–≤—Å–µ–º –±–ª–∏–∑–∫–æ –∫ –∑–¥–æ—Ä–æ–≤–æ–π –∂–∏–∑–Ω–∏ üòç, –≥–æ—Ä–∂—É—Å—å –í–∞–º–∏. '
                              '–í—Ä–µ–º—è –≤—ã–±–∏—Ä–∞—Ç—å, —á–µ–º —Ö–æ—Ç–∏—Ç–µ –∑–∞–Ω—è—Ç—å—Å—è –∏–ª–∏ —á—Ç–æ –í–∞–º –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å:\n'
                              '"–ó–∞—Ä—è–¥–∫–∞", "–ö–∞—Ä–¥–∏–æ", "–°–∏–ª–æ–≤–∞—è", "–§–∞–∑—ã —Å–Ω–∞" –∏–ª–∏ "–í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å".']
            res = {
                'version': req['version'],
                'session': req['session'],
                'response': {
                    'text': f'{answer_options[rn.randint(0, 1)]}',
                    'buttons': [
                        {
                            'title': '–ó–∞—Ä—è–¥–∫–∞',
                            'hide': True
                        },
                        {
                            "title": "–ö–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞",
                            "hide": True
                        },
                        {
                            "title": "–°–∏–ª–æ–≤–∞—è —Ñ—É–ª–ª–±–∞–¥–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞",
                            "hide": True
                        },
                        {
                            'title': '–§–∞–∑—ã —Å–Ω–∞',
                            'hide': True
                        },
                        {
                            'title': '–í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å',
                            'hide': True
                        }
                    ]
                }
            }
            fsm.set_state(user_id, MainGroup.SportBranch.state_home)
            print(fsm.get_state(user_id))

        if fsm.get_state(user_id) in MainGroup.SportBranch:
            print('HELLO', fsm.get_state(user_id))


        else:
            res = {
                'version': req['version'],
                'session': req['session'],
                'response': {
                    'text': f'–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –ø–æ–Ω—è–ª–∞ –≤–∞—Åüò£\n–î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º –∑–∞–Ω–æ–≤–æ –≤—ã–±—Ä–∞—Ç—å –∑–∞–Ω—è—Ç–∏–µ!\n'
                            f'"–ó–∞—Ä—è–¥–∫–∞", "–ö–∞—Ä–¥–∏–æ", "–°–∏–ª–æ–≤–∞—è", "–§–∞–∑—ã —Å–Ω–∞" –∏–ª–∏ "–í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å" ',
                    'buttons': [
                        {
                            'title': '–ó–∞—Ä—è–¥–∫–∞',
                            'hide': True
                        },
                        {
                            "title": "–ö–∞—Ä–¥–∏–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞",
                            "hide": True
                        },
                        {
                            "title": "–°–∏–ª–æ–≤–∞—è —Ñ—É–ª–ª–±–∞–¥–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞",
                            "hide": True
                        },
                        {
                            'title': '–§–∞–∑—ã —Å–Ω–∞',
                            'hide': True
                        },
                        {
                            'title': '–í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å',
                            'hide': True
                        }
                    ]
                }
            }
            fsm.set_state(user_id, MainGroup.state_1)
        return json.dumps(res, ensure_ascii=False, indent=2)


app.run('localhost', port=5050, debug=True)
