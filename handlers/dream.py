import random

from typing_ import Response, AliceUserRequest
from fsm import FSMContext
from tools.time_parsing import parse_time, iter_go_sleep_time

from states import MainGroup


def dream_handler(context: FSMContext, req: AliceUserRequest, resp: dict | Response) -> dict | Response:
    match context.state:
        case MainGroup.Dream.state_1:
            try:
                time = parse_time(req.request.command)
            except RuntimeError:
                pass
            else:
                go_sleep_times = list(iter_go_sleep_time(time))
                print(time)
                print(go_sleep_times)
                answer_options = [
                    f'–ß—Ç–æ–±—ã –ø–æ—Å–ª–µ —Å–Ω–∞ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –ø–æ–ª–Ω—ã–º —ç–Ω–µ—Ä–≥–∏–µ–π, –í–∞–º —Å–ª–µ–¥—É–µ—Ç –ª–µ—á—å —Å–ø–∞—Ç—å –≤ {go_sleep_times[0].strftime("%H:%M")} '
                    f'–∏–ª–∏ –≤ {go_sleep_times[1].strftime("%H:%M")}üò¥. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–≤–µ—Å—Ç–∏ –±—É–¥–∏–ª—å–Ω–∏–∫!',

                    f'–õ–æ–∂–∏—Ç–µ—Å—å —Å–ø–∞—Ç—å –≤ {go_sleep_times[0].strftime("%H:%M")} –∏–ª–∏ –≤ {go_sleep_times[1].strftime("%H:%M")}, '
                    f'—á—Ç–æ–±—ã —É—Ç—Ä–æ–º —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –ø–æ–ª–Ω—ã–º —Å–∏–ª. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–≤–µ—Å—Ç–∏ –±—É–¥–∏–ª—å–Ω–∏–∫!']
                resp.update({
                    'response': {
                        'text': f'{random.choice(answer_options)}',
                        'card': {
                            'type': 'ItemsList',
                            'header': {
                                'text': f'{random.choice(answer_options)}'
                            },
                            'items': [
                                {"title": '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –µ—â—ë —Ä–∞–∑', 'button': {"text": '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –µ—â—ë —Ä–∞–∑'},
                                 "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...', "image_id": '997614/15f977696a281092bcc0'},
                                {"title": '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Å–ø–∏—Å–∫—É', "button": {"text": '–ù–∞–∑–∞–¥'},
                                 "description": '–æ–ø–∏—Å–∞–Ω–∏–µ...', "image_id": '1030494/cc3631c8499cdc8daf8b'}

                            ]
                        }
                    }
                })
                MainGroup.Dream.end.set(context)
        case MainGroup.Dream.end:
            resp.update({
                'response': {
                    'text': '–í–æ —Å–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—Å–Ω—É—Ç—å—Å—è?'
                }
            })
            MainGroup.Dream.state_1.set(context)

    return resp
